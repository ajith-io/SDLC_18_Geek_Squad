<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="unity__internals_8h" kind="file" language="C++">
    <compoundname>unity_internals.h</compoundname>
    <includes local="no">setjmp.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">stdio.h</includes>
    <includedby refid="test_8c" local="yes">3_Implementation/test/test.c</includedby>
    <includedby refid="unity_8h" local="yes">3_Implementation/unity/unity.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>setjmp.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="1">
        <label>3_Implementation/unity/unity_internals.h</label>
        <link refid="unity__internals_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>3_Implementation/unity/unity.h</label>
        <link refid="unity_8h_source"/>
      </node>
      <node id="1">
        <label>3_Implementation/unity/unity_internals.h</label>
        <link refid="unity__internals_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_u_n_i_t_y___s_t_o_r_a_g_e___t" prot="public">UNITY_STORAGE_T</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="unity__internals_8h_1ae70a46c6e90e5da743e28f68d1ae1730" prot="public" static="no">
        <name>UNITY_FUNCTION_ATTR</name>
        <param><defname>a</defname></param>
        <initializer>/* ignore */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="46" column="14" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a49d706e83bdd826e9da179aa695ee390" prot="public" static="no">
        <name>UNITY_INT_WIDTH</name>
        <initializer>(32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="69" column="13" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aaac66fcb66b8afa5caaa4a34c80357b3" prot="public" static="no">
        <name>UNITY_LONG_WIDTH</name>
        <initializer>(32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="84" column="13" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a5d6a4e5e541e83147b950704019577b4" prot="public" static="no">
        <name>UNITY_POINTER_WIDTH</name>
        <initializer>UNITY_LONG_WIDTH</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="99" column="13" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aaf412703bd49918c64592110d42a5fdb" prot="public" static="no">
        <name>UNITY_MAX_NIBBLES</name>
        <initializer>(8)  /* Maximum number of nibbles in a UNITY_(U)INT */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="141" column="13" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1acf07b05a99ee633d3f24957f25fc1a3c" prot="public" static="no">
        <name>UNITY_PTR_TO_INT</name>
        <initializer>UNITY_INT32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="163" column="11" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a9abc41e04bc5117dcb1572d5260d6a71" prot="public" static="no">
        <name>UNITY_DISPLAY_STYLE_POINTER</name>
        <initializer>UNITY_DISPLAY_STYLE_HEX32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="164" column="11" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" prot="public" static="no">
        <name>UNITY_PTR_ATTRIBUTE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="176" column="11" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" prot="public" static="no">
        <name>UNITY_INTERNAL_PTR</name>
        <initializer>UNITY_PTR_ATTRIBUTE const void*</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="180" column="11" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a98a2e4d26a2d4a3c71e0410459fc66fb" prot="public" static="no">
        <name>UNITY_FLOAT_PRECISION</name>
        <initializer>(0.00001f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="201" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af1102710e7959e98a8b6f515e883d664" prot="public" static="no">
        <name>UNITY_FLOAT_TYPE</name>
        <initializer>float</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="204" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a851063e6624621d373e8f4da8973d27b" prot="public" static="no">
        <name>isinf</name>
        <param><defname>n</defname></param>
        <initializer>(isnan((n) - (n)) &amp;&amp; !isnan(n))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="211" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a57f9c20a91520ba43d7942d03bb7a314" prot="public" static="no">
        <name>isnan</name>
        <param><defname>n</defname></param>
        <initializer>((n != n) ? 1 : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="217" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a8a4aae3a1dd0216d843f53c19ecafeaf" prot="public" static="no">
        <name>UNITY_EXCLUDE_DOUBLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="231" column="11" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ac91381a9e6960b549763dc244db4bb40" prot="public" static="no">
        <name>UNITY_DOUBLE_TYPE</name>
        <initializer>double</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="238" column="13" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" prot="public" static="no">
        <name>UNITY_OUTPUT_CHAR</name>
        <param><defname>a</defname></param>
        <initializer>(void)putchar(a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="264" column="14" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a458886b9a590fda474d4467fa40a2367" prot="public" static="no">
        <name>UNITY_OUTPUT_FLUSH</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="279" column="13" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a797ba83286171b672f39e93f97bce814" prot="public" static="no">
        <name>UNITY_FLUSH_CALL</name>
        <param></param>
        <initializer>UNITY_OUTPUT_FLUSH()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="291" column="10" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a9e38369f7998441218877815228db8e3" prot="public" static="no">
        <name>UNITY_PRINT_EOL</name>
        <param></param>
        <initializer>UNITY_OUTPUT_CHAR(&apos;\n&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="295" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a96e6c4faeb1b01d3f3dc00aabe4eccc2" prot="public" static="no">
        <name>UNITY_OUTPUT_START</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="299" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a05bb0df6aae73691385d7aca5b50aa93" prot="public" static="no">
        <name>UNITY_OUTPUT_COMPLETE</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="303" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aa17cae54058ba9908b718e7e7b9e5391" prot="public" static="no">
        <name>UNITY_EXEC_TIME_START</name>
        <param></param>
        <initializer>do{}while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="354" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ad40fec71f22c7c4a4fc79212095a83a0" prot="public" static="no">
        <name>UNITY_EXEC_TIME_STOP</name>
        <param></param>
        <initializer>do{}while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="358" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aed8b43156164dcb58baa2e9e8381cc4f" prot="public" static="no">
        <name>UNITY_TIME_TYPE</name>
        <initializer>UNITY_UINT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="362" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a01ffc252a92765b544993db09f734642" prot="public" static="no">
        <name>UNITY_PRINT_EXEC_TIME</name>
        <param></param>
        <initializer>do{}while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="366" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" prot="public" static="no">
        <name>UNITY_LINE_TYPE</name>
        <initializer>UNITY_UINT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="374" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ab5186738706785ae0189b382e45911d9" prot="public" static="no">
        <name>UNITY_COUNTER_TYPE</name>
        <initializer>UNITY_UINT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="378" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a26974acf13f60993e03bd2fde52e7957" prot="public" static="no">
        <name>UNITY_DISPLAY_RANGE_INT</name>
        <initializer>(0x10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="387" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a52b6d0ed023c20279b5cf7d6de75bf87" prot="public" static="no">
        <name>UNITY_DISPLAY_RANGE_UINT</name>
        <initializer>(0x20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="388" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a0bee25aeeb5f9a91794e3c99291bd40e" prot="public" static="no">
        <name>UNITY_DISPLAY_RANGE_HEX</name>
        <initializer>(0x40)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="389" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a82d48c7c5b91378189c1822d877072b3" prot="public" static="no">
        <name>UNITY_DISPLAY_RANGE_CHAR</name>
        <initializer>(0x80)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="390" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a211afe418b1b4a2590a877ae83f7c48a" prot="public" static="no">
        <name>UNITY_CLR_DETAILS</name>
        <param></param>
        <initializer>{ Unity.CurrentDetail1 = 0;   Unity.CurrentDetail2 = 0;  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="505" column="10" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a92809a9fe1cf6d07fe0e12a1df8f7cc9" prot="public" static="no">
        <name>UNITY_SET_DETAIL</name>
        <param><defname>d1</defname></param>
        <initializer>{ Unity.CurrentDetail1 = (d1);  Unity.CurrentDetail2 = 0;  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="506" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a03cb4148b47a7cbc871dfcde693513a9" prot="public" static="no">
        <name>UNITY_SET_DETAILS</name>
        <param><defname>d1</defname></param>
        <param><defname>d2</defname></param>
        <initializer>{ Unity.CurrentDetail1 = (d1);  Unity.CurrentDetail2 = (d2); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="507" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a042d83acbb41b31be88dab4c80fdb0f5" prot="public" static="no">
        <name>UNITY_DETAIL1_NAME</name>
        <initializer>&quot;Function&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="510" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ac9f3f929ab0b17100733abb2ae3a3e90" prot="public" static="no">
        <name>UNITY_DETAIL2_NAME</name>
        <initializer>&quot;Argument&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="514" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a61d21043921ebc1c2ee49543fc100f9a" prot="public" static="no">
        <name>TEST_PROTECT</name>
        <param></param>
        <initializer>(setjmp(Unity.AbortFrame) == 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="695" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="695" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a35ff53d9ad3c4ec9d611fdf04319a23b" prot="public" static="no">
        <name>TEST_ABORT</name>
        <param></param>
        <initializer>longjmp(Unity.AbortFrame, 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="696" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a27cf08abbe33174b41d808a147cfef11" prot="public" static="no">
        <name>RUN_TEST</name>
        <param><defname>func</defname></param>
        <initializer>UnityDefaultTestRun(func, #func, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="720" column="10" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aa9c480092f985483d29fe0bc26b3a650" prot="public" static="no">
        <name>TEST_LINE_NUM</name>
        <initializer>(Unity.CurrentTestLineNumber)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="724" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="724" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af3dee0f42dbe9e1f627ed2b0337d2fbf" prot="public" static="no">
        <name>TEST_IS_IGNORED</name>
        <initializer>(Unity.CurrentTestIgnored)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="725" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a6487f30c2b75ebe0897ee0a4ba75e46f" prot="public" static="no">
        <name>UNITY_NEW_TEST</name>
        <param><defname>a</defname></param>
        <initializer>    Unity.CurrentTestName = (a); \
    Unity.CurrentTestLineNumber = (UNITY_LINE_TYPE)(__LINE__); \
    Unity.NumberOfTests++;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="726" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aaad15a5d10e50a412d0a6851d0e5091a" prot="public" static="no">
        <name>UNITY_BEGIN</name>
        <param></param>
        <initializer>UnityBegin(__FILE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="732" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aa519129d3af737eb796fc91720fae26a" prot="public" static="no">
        <name>UNITY_END</name>
        <param></param>
        <initializer>UnityEnd()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="736" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="736" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ab8cd9e3ef25173900c31cff99e555ab4" prot="public" static="no">
        <name>UNITY_SHORTHAND_AS_OLD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="743" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="743" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a3d31f0df7b97fe0bed97d15583042aa4" prot="public" static="no">
        <name>UNITY_TEST_FAIL</name>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityFail(   (message), (UNITY_LINE_TYPE)(line))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="762" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="762" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1acfab15b7b78c28a3891f2d73675cbd11" prot="public" static="no">
        <name>UNITY_TEST_IGNORE</name>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityIgnore( (message), (UNITY_LINE_TYPE)(line))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="763" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a15243df2865f9f77712ecc373f168b0f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT</name>
        <param><defname>condition</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>do {if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}} while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="769" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aebf9ec01ca53f5583b13e48378deca87" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NULL</name>
        <param><defname>pointer</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_ASSERT(((pointer) == NULL),  (UNITY_LINE_TYPE)(line), (message))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="770" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="770" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a859605c125ffb0d03fe11202be238303" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_NULL</name>
        <param><defname>pointer</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_ASSERT(((pointer) != NULL),  (UNITY_LINE_TYPE)(line), (message))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="771" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a91bbb48a8754bf55b6cdfe94f5a5d463" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EMPTY</name>
        <param><defname>pointer</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_ASSERT(((pointer[0]) == 0),  (UNITY_LINE_TYPE)(line), (message))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="772" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="772" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a5e4bad12bb66803e315b84342f0066cf" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EMPTY</name>
        <param><defname>pointer</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_ASSERT(((pointer[0]) != 0),  (UNITY_LINE_TYPE)(line), (message))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="773" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ad87ea08d8da69e64c215f430e31e0e5c" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_INT</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(expected), (UNITY_INT)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="775" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ac772b698fce9e84fb4114264c14a3a8f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_INT8</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT8 )(expected), (UNITY_INT)(UNITY_INT8 )(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="776" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a1a38bdaef555a9c122619caf1d8e37f1" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_INT16</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT16)(expected), (UNITY_INT)(UNITY_INT16)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="777" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a64f06cb593b0f66d57baca4659efbe7b" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_INT32</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT32)(expected), (UNITY_INT)(UNITY_INT32)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="778" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="778" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af5a88ad0c365ec3361ed78cfad27f123" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_UINT</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(expected), (UNITY_INT)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="779" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ac01d4831b48fa054cea13049a9a00ccd" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_UINT8</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(UNITY_UINT8 )(expected), (UNITY_INT)(UNITY_UINT8 )(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="780" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ae627b4a628a7b17dc472249133b41e64" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_UINT16</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(UNITY_UINT16)(expected), (UNITY_INT)(UNITY_UINT16)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="781" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="781" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aab9562f2e4a129160ba1e9609dd25689" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_UINT32</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(UNITY_UINT32)(expected), (UNITY_INT)(UNITY_UINT32)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="782" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a5a6553e7769b3b97f3c8ef97f0c7f449" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_HEX8</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT8 )(expected), (UNITY_INT)(UNITY_INT8 )(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="783" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="783" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a252913f7a48b4e33b2afcdb02c3e2161" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_HEX16</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT16)(expected), (UNITY_INT)(UNITY_INT16)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="784" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="784" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a8530bcfed8598d50e3edd5c961a2e3eb" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_HEX32</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT32)(expected), (UNITY_INT)(UNITY_INT32)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="785" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="785" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ab9563fd4f1d2fcfbd714364fc667c917" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_CHAR</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT8 )(expected), (UNITY_INT)(UNITY_INT8 )(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_CHAR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="786" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="786" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1acfd7664b8a739d94ae8454f9f51a6aac" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_BITS</name>
        <param><defname>mask</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertBits((UNITY_INT)(mask), (UNITY_INT)(expected), (UNITY_INT)(actual), (message), (UNITY_LINE_TYPE)(line))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="787" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="787" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aa4ac71709750c13422fb2d5f7d750da3" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_INT</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),               (UNITY_INT)(actual),               UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="789" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="789" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af57e38afef36c2540a31f36726e8dbac" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_INT8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8 )(threshold),  (UNITY_INT)(UNITY_INT8 )(actual),  UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="790" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="790" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a8b473ea1a0120c94f980523a2b852d51" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_INT16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold),  (UNITY_INT)(UNITY_INT16)(actual),  UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="791" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aab57535280feb3e799d82e9f67e3665e" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_INT32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold),  (UNITY_INT)(UNITY_INT32)(actual),  UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="792" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a8dd5c8d75de63306b5b68bbab7ede2df" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_UINT</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),               (UNITY_INT)(actual),               UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="793" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a6d8a9008c5862d424632cdfdad4fe5b0" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_UINT8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8 )(threshold), (UNITY_INT)(UNITY_UINT8 )(actual), UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="794" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aab3190d6b07bd6f4f6ff27b0cb8b5bf5" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_UINT16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold), (UNITY_INT)(UNITY_UINT16)(actual), UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="795" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="795" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a7709ef010c418e7c7e5f173599bf6620" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_UINT32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold), (UNITY_INT)(UNITY_UINT32)(actual), UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="796" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="796" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a1c8e1ba6c9402b6b3345ec7ff195893b" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_HEX8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8 )(threshold), (UNITY_INT)(UNITY_UINT8 )(actual), UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="797" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="797" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1adc3360cce0bd6b65803cc21878d378d1" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_HEX16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold), (UNITY_INT)(UNITY_UINT16)(actual), UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="798" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="798" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ac5a702ac9985bd6d9249626cb6d315cb" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_HEX32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold), (UNITY_INT)(UNITY_UINT32)(actual), UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="799" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="799" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a5a64b5eed24fcc1c14693dd68735fca6" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_NOT_EQUAL_CHAR</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8 )(threshold),  (UNITY_INT)(UNITY_INT8 )(actual),  UNITY_NOT_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_CHAR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="800" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="800" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af3af57af2788e82e30e97c92ffc34b76" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_INT</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),              (UNITY_INT)(actual),              UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="802" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="802" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ac477e3ab0e34b258b8280bb360a7da81" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_INT8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8 )(threshold), (UNITY_INT)(UNITY_INT8 )(actual), UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="803" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="803" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ab43ee4d2dfebd0d1b525eeed107a6948" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_INT16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold), (UNITY_INT)(UNITY_INT16)(actual), UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="804" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="804" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ad365c723631cc8885d6baebe8beb2000" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_INT32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold), (UNITY_INT)(UNITY_INT32)(actual), UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="805" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="805" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1afb26943b76ee21d76701aaada122c095" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_UINT</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),              (UNITY_INT)(actual),              UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="806" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a3418a0ce36198179677864ad3194091d" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_UINT8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8 )(threshold), (UNITY_INT)(UNITY_UINT8 )(actual), UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="807" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="807" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a6457858ab178fb2d756fa4d70b4e49ed" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_UINT16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold), (UNITY_INT)(UNITY_UINT16)(actual), UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="808" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="808" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1abc0f185a2faf9490d0c7d3c4bd2e2f13" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_UINT32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold), (UNITY_INT)(UNITY_UINT32)(actual), UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="809" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="809" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a5af17155fb5e3d0b52746ed3ab4fe2e1" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_HEX8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8 )(threshold), (UNITY_INT)(UNITY_UINT8 )(actual), UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="810" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="810" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a419905fc528e0399d444817b2768c578" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_HEX16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold), (UNITY_INT)(UNITY_UINT16)(actual), UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="811" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a864105cb400e06ddccadbc9fb0a62737" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_HEX32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold), (UNITY_INT)(UNITY_UINT32)(actual), UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="812" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a91c517d41f89b428f0a9190dc5ca898d" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_CHAR</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8 )(threshold), (UNITY_INT)(UNITY_INT8 )(actual), UNITY_GREATER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_CHAR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="813" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a4c9d183e00a5fd61f16e3a3beb807f02" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_INT</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),              (UNITY_INT)(actual),              UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="815" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="815" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a7c6e0bd4b357594313295145b9390d87" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_INT8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8 )(threshold), (UNITY_INT)(UNITY_INT8 )(actual), UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="816" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="816" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a75f16172909095ac9b534fbf626ca686" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_INT16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold), (UNITY_INT)(UNITY_INT16)(actual), UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="817" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="817" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a5141441a76b31a3e774ccc0b54ef96f7" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_INT32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold), (UNITY_INT)(UNITY_INT32)(actual), UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="818" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="818" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ac3077dcaeae5edcb15ad0514688b3501" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_UINT</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),              (UNITY_INT)(actual),              UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="819" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="819" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ad1d3640d038f5054c51f8f3b36d88781" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_UINT8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8 )(threshold), (UNITY_INT)(UNITY_UINT8 )(actual), UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="820" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="820" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a33b53399847d938270c953a6242cac50" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_UINT16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold), (UNITY_INT)(UNITY_UINT16)(actual), UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="821" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a635be665da2d05ee1c0070a555443261" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_UINT32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold), (UNITY_INT)(UNITY_UINT32)(actual), UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="822" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="822" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a2fc136a2f960874501bbf26050dcb59e" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_HEX8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8 )(threshold), (UNITY_INT)(UNITY_UINT8 )(actual), UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="823" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="823" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a5d238212e36dfd501d7e1b78acc7ddb4" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_HEX16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold), (UNITY_INT)(UNITY_UINT16)(actual), UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="824" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="824" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a7f0f0d905dc763b642a6d4a886d147da" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_HEX32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold), (UNITY_INT)(UNITY_UINT32)(actual), UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="825" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="825" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1afa9439215d8f8ed8ac40932c28f63a1e" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_CHAR</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8 )(threshold), (UNITY_INT)(UNITY_INT8 )(actual), UNITY_SMALLER_THAN, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_CHAR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="826" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="826" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a7357a3259af0defd34c37c46e287382d" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)              (threshold), (UNITY_INT)              (actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="828" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="828" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a1949404817f26d7f77c99ffd40efdfa2" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8 ) (threshold), (UNITY_INT)(UNITY_INT8 ) (actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="829" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="829" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a666af8c9bda177b052dfc5639c4f38c8" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16) (threshold), (UNITY_INT)(UNITY_INT16) (actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="830" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="830" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a853e47cb8567e8b998f7744680810d53" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32) (threshold), (UNITY_INT)(UNITY_INT32) (actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="831" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="831" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a9d9750b6c35911455a5b7d9a8adcf585" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)              (threshold), (UNITY_INT)              (actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="832" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="832" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a91398da6892acc83c5c43873fc4c5b3d" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8 )(threshold), (UNITY_INT)(UNITY_UINT8 )(actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="833" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="833" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aee445e8e6b1e1f4e858f61ae02a63510" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold), (UNITY_INT)(UNITY_UINT16)(actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="834" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="834" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a9f4c40feae3cded9e2b30d3cab1e463b" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold), (UNITY_INT)(UNITY_UINT32)(actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="835" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="835" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a91e2a3882bfd5f685a6e54d3b5e7ee30" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8 )(threshold), (UNITY_INT)(UNITY_UINT8 )(actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="836" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="836" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af209be736676b8891766939bb78e8f3a" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold), (UNITY_INT)(UNITY_UINT16)(actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="837" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="837" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aebfe5fe3378e3713a755af2d0a802943" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold), (UNITY_INT)(UNITY_UINT32)(actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="838" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="838" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1adbe7a583cd5085732951a22c4d4de139" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_CHAR</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8 ) (threshold), (UNITY_INT)(UNITY_INT8 ) (actual), UNITY_GREATER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_CHAR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="839" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="839" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a3ba6fd2cafa0be078fb4f76340a299c0" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)             (threshold),  (UNITY_INT)              (actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="841" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="841" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a896633a339dc4ced0169c85d18f80468" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8 )(threshold),  (UNITY_INT)(UNITY_INT8 ) (actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="842" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="842" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ae43b854657e549ddfdc49f8c5519201d" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold),  (UNITY_INT)(UNITY_INT16) (actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="843" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="843" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a3a8b8cbb2ee5680f134095c63d2e8539" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold),  (UNITY_INT)(UNITY_INT32) (actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="844" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="844" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a0c6cb6d0a4de6d8ee0148cf1c39a203a" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)             (threshold),  (UNITY_INT)              (actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="845" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="845" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a1d7868e0ed4b0e9354975fc9c36a0ea8" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8 )(threshold), (UNITY_INT)(UNITY_UINT8 )(actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="846" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="846" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ab5517b31d3a94fae3605a91fcf204155" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold), (UNITY_INT)(UNITY_UINT16)(actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="847" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="847" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a02e63273dbfda3ac85a7580169d95c94" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold), (UNITY_INT)(UNITY_UINT32)(actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="848" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="848" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a55e732e9b8fafeb59c4eddb94383e03c" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX8</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8 )(threshold), (UNITY_INT)(UNITY_UINT8 )(actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="849" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="849" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a0e3a5ce86199518479ec0887bc206cc9" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX16</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold), (UNITY_INT)(UNITY_UINT16)(actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="850" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="850" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a19c341603a758d86b815fea0e1f447b9" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX32</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold), (UNITY_INT)(UNITY_UINT32)(actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="851" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="851" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ae9385c90963cd64e9bbc3eecb3309d6f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_CHAR</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8 )(threshold),  (UNITY_INT)(UNITY_INT8 ) (actual), UNITY_SMALLER_OR_EQUAL, (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_CHAR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="852" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="852" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a6e4abaa4f1f20352b9bc047143d7ec09" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_INT_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin(              (delta), (UNITY_INT)                          (expected), (UNITY_INT)                          (actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="854" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="854" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ad7b07ba0dc4a027c07ed9264f260a89f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_INT8_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin((UNITY_UINT8 )(delta), (UNITY_INT)(UNITY_INT8 )             (expected), (UNITY_INT)(UNITY_INT8 )             (actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="855" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="855" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a0d45d1a5d610259e0a45987fc492341b" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_INT16_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin((UNITY_UINT16)(delta), (UNITY_INT)(UNITY_INT16)             (expected), (UNITY_INT)(UNITY_INT16)             (actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="856" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="856" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ad9845984cef90587bf85f681730fb069" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_INT32_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin((UNITY_UINT32)(delta), (UNITY_INT)(UNITY_INT32)             (expected), (UNITY_INT)(UNITY_INT32)             (actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="857" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="857" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a59fb8212b029495f536d29d2a37d5d1f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_UINT_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin(              (delta), (UNITY_INT)                          (expected), (UNITY_INT)                          (actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="858" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="858" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1abc394eb14f0f63dcc2a6ee6378694064" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_UINT8_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin((UNITY_UINT8 )(delta), (UNITY_INT)(UNITY_UINT)(UNITY_UINT8 )(expected), (UNITY_INT)(UNITY_UINT)(UNITY_UINT8 )(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="859" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="859" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af6fd8ad63040baca41408124ee677dc0" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_UINT16_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin((UNITY_UINT16)(delta), (UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(expected), (UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="860" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="860" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af4d15267052a33c588fe1762c41119b1" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_UINT32_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin((UNITY_UINT32)(delta), (UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(expected), (UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="861" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a781e55d0d32fe88cbc739c025fab167e" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_HEX8_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin((UNITY_UINT8 )(delta), (UNITY_INT)(UNITY_UINT)(UNITY_UINT8 )(expected), (UNITY_INT)(UNITY_UINT)(UNITY_UINT8 )(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="862" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="862" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a2048593ce8c7d3d9e1f2f3d70b4b6460" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_HEX16_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin((UNITY_UINT16)(delta), (UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(expected), (UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="863" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="863" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af3e96e5e1964382d7ccfa0c65cd07582" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_HEX32_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin((UNITY_UINT32)(delta), (UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(expected), (UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="864" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="864" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1afb352d2b1fb672846030d1e4c0887c71" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_CHAR_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersWithin((UNITY_UINT8 )(delta), (UNITY_INT)(UNITY_INT8 )             (expected), (UNITY_INT)(UNITY_INT8 )             (actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_CHAR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="865" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="865" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1abd6df444d69d53ed86e49affea8ab77f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_INT_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin(              (delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="867" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="867" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a97be2b16c10ac64ef4b28bb17cb24384" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_INT8_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin((UNITY_UINT8 )(delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT8, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="868" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="868" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a7ab450c2644c6e644383c0dfe51e4010" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_INT16_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin((UNITY_UINT16)(delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT16, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="869" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="869" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a0f1f952d22950d9be4003479486bc123" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_INT32_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin((UNITY_UINT32)(delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT32, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="870" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="870" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ae7cc9ca017d2a1a718a53da3111d02ad" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_UINT_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin(              (delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="871" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="871" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a02b0d07ca9df7b4cd65458b753430a97" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_UINT8_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin( (UNITY_UINT16)(delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT8, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="872" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="872" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ad3a3698fc2e6606f96356f325810a4f2" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_UINT16_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin((UNITY_UINT16)(delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT16, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="873" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="873" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ad0b3dea26493fa61c5005b175ccdf3e7" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_UINT32_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin((UNITY_UINT32)(delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT32, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="874" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="874" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a9baee0c25fec9091899e4f017332cbc3" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_HEX8_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin((UNITY_UINT8 )(delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX8, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="875" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="875" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a20b4b7ae4bad388a719020c21083e7c8" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_HEX16_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin((UNITY_UINT16)(delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX16, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="876" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="876" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a2cfdeb8ff8440738d28571f1be547af3" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_HEX32_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin((UNITY_UINT32)(delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX32, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="877" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="877" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aab7464b61950e26d855ffe2d44f56043" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_CHAR_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertNumbersArrayWithin((UNITY_UINT8 )(delta), (UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), ((UNITY_UINT32)(num_elements)), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_CHAR, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="878" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="878" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1adc0a9e2df317741179d184c6eab88c96" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_PTR</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualNumber((UNITY_PTR_TO_INT)(expected), (UNITY_PTR_TO_INT)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_POINTER)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="881" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="881" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ab5571ca5419eb6a2161af4c499d52ae5" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_STRING</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualString((const char*)(expected), (const char*)(actual), (message), (UNITY_LINE_TYPE)(line))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="882" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="882" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aba671c4ed27af1e97749a43117b89a5a" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_STRING_LEN</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>len</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualStringLen((const char*)(expected), (const char*)(actual), (UNITY_UINT32)(len), (message), (UNITY_LINE_TYPE)(line))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="883" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="883" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a6cea271bec60c12acad881b95744823f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_MEMORY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>len</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualMemory((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(len), 1, (message), (UNITY_LINE_TYPE)(line), UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="884" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="884" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ada8b40614aab9766b9008acb5cd68efe" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_INT_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT,     UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="886" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="886" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aaf75122a388979162bfd3341b8db4c72" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_INT8_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT8,    UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="887" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="887" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a9cc5e307629f9f6d5bd28592076e2c89" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_INT16_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT16,   UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="888" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="888" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a9f2ee1354de898ad8f718b5eb9b1aece" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_INT32_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT32,   UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="889" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="889" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a7424a525765231dbf262f044317bba2c" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_UINT_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT,    UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="890" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="890" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ae3dd03ff812b3e870f7cd9379d386db8" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_UINT8_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT8,   UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="891" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="891" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a5d76b4ab9345554d2980a768700c1d30" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_UINT16_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT16,  UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="892" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="892" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1acca2b5aa6445bb4e041aeb7e11cb076a" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_UINT32_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT32,  UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="893" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="893" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a1291b0defc2a033f5b010d7d86bacb56" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_HEX8_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX8,    UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="894" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="894" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a2ea3b92ce51590de89e9caa2fb1f5159" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_HEX16_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX16,   UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="895" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="895" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a1226d22355ca314dffbce5181a6b6590" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_HEX32_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX32,   UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="896" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="896" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a891f6995ec262671895819276173ec04" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_PTR_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_POINTER, UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="897" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="897" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a3f66863d2cf4049e0158eaa1576cf86f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_STRING_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualStringArray((UNITY_INTERNAL_PTR)(expected), (const char**)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="898" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="898" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ab2e06c8712ac5f38d44aa38143adf5b2" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_MEMORY_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>len</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualMemory((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(len), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="899" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ad96dc3287c4afff206df69dff5644c5f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_CHAR_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_CHAR,    UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="900" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="900" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1afde36b598d7e8b0fdb4f4ee40afd464a" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_INT</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)              (expected), (UNITY_INT_WIDTH / 8)),          (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT,     UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="902" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="902" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aed5db82d979862122fad599cc751d4d0" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_INT8</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT8  )(expected), 1),                              (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT8,    UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="903" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="903" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aa7fa667832cd3f61f1f01b7638a532be" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_INT16</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT16 )(expected), 2),                              (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT16,   UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="904" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="904" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af7359fe8e73173944cbe9d9814a32479" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_INT32</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT32 )(expected), 4),                              (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_INT32,   UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="905" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ae3519b5d6d9def6a40c42d25cc55bb9a" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_UINT</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)              (expected), (UNITY_INT_WIDTH / 8)),          (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT,    UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="906" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="906" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1acac79a77d36f3e778ce3bc42888935a7" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_UINT8</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_UINT8 )(expected), 1),                              (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT8,   UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="907" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="907" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a7227ca1079a84c281b64a46c1bd8b902" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_UINT16</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_UINT16)(expected), 2),                              (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT16,  UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="908" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="908" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aaa331cc1a73e84ab06a7ecab5c9bf806" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_UINT32</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_UINT32)(expected), 4),                              (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_UINT32,  UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="909" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="909" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a007d794cac06843f4fc6b453b523a53e" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_HEX8</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT8  )(expected), 1),                              (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX8,    UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="910" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="910" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a82a2ef222b0a4cf0c8c804a42fbc1865" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_HEX16</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT16 )(expected), 2),                              (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX16,   UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="911" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="911" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ad0ab11f31b1b69c472f1a003eab3ece9" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_HEX32</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT32 )(expected), 4),                              (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_HEX32,   UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="912" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="912" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a0c30ca8ed2398de03fdf5ce0103add22" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_PTR</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_PTR_TO_INT)       (expected), (UNITY_POINTER_WIDTH / 8)),      (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_POINTER, UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="913" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="913" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a7a4b25da3ba24bdb9162df227296037c" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_STRING</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualStringArray((UNITY_INTERNAL_PTR)(expected), (const char**)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="914" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="914" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a44a50f4cb297bc3524d05b80000aa3a2" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_MEMORY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>len</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualMemory((UNITY_INTERNAL_PTR)(expected), (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(len), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="915" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="915" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aab6cd5431a4f0d6939e0be376a667f90" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_CHAR</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT8  )(expected), 1),                              (UNITY_INTERNAL_PTR)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_DISPLAY_STYLE_CHAR,    UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="916" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="916" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a96e4dff8db34fbce578bdbc91e01953d" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_INT64</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="950" column="10" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="950" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a6f41f3d57ebbf6f1a854e623a187ee1f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_UINT64</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="951" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="951" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a90ca32fc5e695fe95ed5985c804e6467" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_HEX64</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="952" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="952" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a7086e9c9a255ab275336280dfa9cf76d" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_INT64_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="953" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="953" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a700f1de45549981aa2a4409d8507c46b" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_UINT64_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="954" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="954" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a660a7aae8961a68317d6c62a9e62909c" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_HEX64_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="955" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="955" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a6a493bf62761086e3b6eda0667b55a59" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_INT64_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="956" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="956" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af4cc7590508443b8832d1d262571bc97" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_UINT64_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="957" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="957" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a61b3b566ddc8f6de187ca557567afd37" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_HEX64_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="958" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="958" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a4288ef6391c739f5c4dd881cb2157aed" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_INT64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="959" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="959" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a4890ff2a599ae577344f43e47421df72" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_UINT64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="960" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="960" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a0fa0e0b0750561217d0f7d9ab2ef37f3" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_THAN_HEX64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="961" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="961" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a84ea4e043bd529ca8626341669ff0cd5" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="962" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="962" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1acfeba36c1857c96eb95cec76180602f3" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="963" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="963" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a615176378dd99d38e8abbebb37b47241" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="964" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="964" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ab5253f0af4695993ff4906ad786259d0" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_INT64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="965" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="965" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a2215d9a0b6a4d07703ced7f3550d2d5f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_UINT64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="966" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="966" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a91460ee896850fb2c9037a5449ae02ad" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_THAN_HEX64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="967" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="967" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aa3e0dd1504aee52586209e811da6225e" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="968" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="968" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aff7f369a00fba6443ba0c90b253000cb" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="969" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="969" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a727262dd3012cfb769b7fa3df52cfa67" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX64</name>
        <param><defname>threshold</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="970" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="970" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af77997c704694372f742a27f2aa8d0ca" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_INT64_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="971" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="971" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a6ed6d0c89c222bc625efef5463c623ba" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_UINT64_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="972" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="972" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a8de2e4aa9432deed0807902c1e10d6d3" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_HEX64_ARRAY_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErr64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="973" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="973" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aca1172f6e3dda231c58e3d416e81ac77" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_FLOAT_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertFloatsWithin((UNITY_FLOAT)(delta), (UNITY_FLOAT)(expected), (UNITY_FLOAT)(actual), (message), (UNITY_LINE_TYPE)(line))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="990" column="10" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="990" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a1f73e3bd0b927e37227dcd5d7afbe5e2" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_FLOAT</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_ASSERT_FLOAT_WITHIN((UNITY_FLOAT)(expected) * (UNITY_FLOAT)UNITY_FLOAT_PRECISION, (UNITY_FLOAT)(expected), (UNITY_FLOAT)(actual), (UNITY_LINE_TYPE)(line), (message))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="991" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="991" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a58fcdeb8884953567cea1cd5ea3a47c0" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_FLOAT_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualFloatArray((UNITY_FLOAT*)(expected), (UNITY_FLOAT*)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_ARRAY_TO_ARRAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="992" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="992" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a1eeca3f56586c027af3b779dad783f5a" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_FLOAT</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertEqualFloatArray(UnityFloatToPtr(expected), (UNITY_FLOAT*)(actual), (UNITY_UINT32)(num_elements), (message), (UNITY_LINE_TYPE)(line), UNITY_ARRAY_TO_VAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="993" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="993" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a8096d89e8cf4b0c638228cee0df787f2" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_FLOAT_IS_INF</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertFloatSpecial((UNITY_FLOAT)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_FLOAT_IS_INF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="994" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="994" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a5b32d194dffc47af77ea7710231b5ad3" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_FLOAT_IS_NEG_INF</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertFloatSpecial((UNITY_FLOAT)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_FLOAT_IS_NEG_INF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="995" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="995" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a6b514c17c16bec0e1a074f2b3335711a" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_FLOAT_IS_NAN</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertFloatSpecial((UNITY_FLOAT)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_FLOAT_IS_NAN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="996" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="996" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ab9b8306a7e81aa0616a18012e9292a01" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_FLOAT_IS_DETERMINATE</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertFloatSpecial((UNITY_FLOAT)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_FLOAT_IS_DET)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="997" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="997" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aa699f84d6cbeef83bf270b141bd69b80" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_FLOAT_IS_NOT_INF</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertFloatSpecial((UNITY_FLOAT)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_FLOAT_IS_NOT_INF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="998" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="998" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a0c7ccb782e78740a0eb13069977f4eb5" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_FLOAT_IS_NOT_NEG_INF</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertFloatSpecial((UNITY_FLOAT)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_FLOAT_IS_NOT_NEG_INF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="999" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="999" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a87edb39aee9efd79f9e88ffb682d2e0a" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_FLOAT_IS_NOT_NAN</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertFloatSpecial((UNITY_FLOAT)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_FLOAT_IS_NOT_NAN)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1000" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1000" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ab8eeba77027e703006aa907bcd9a83ac" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UnityAssertFloatSpecial((UNITY_FLOAT)(actual), (message), (UNITY_LINE_TYPE)(line), UNITY_FLOAT_IS_NOT_DET)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1001" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1001" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1af3138468131cd73d7a695d9642b05238" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_DOUBLE_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1005" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1005" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1abb93d585ea484fa3acf1052ed6f0403b" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_DOUBLE</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1006" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1006" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1aba3747ad66a95352c4e0e1810099bae4" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EQUAL_DOUBLE_ARRAY</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1007" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1007" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1ac4d4f82622d7dbca5fda07c140390afd" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_EACH_EQUAL_DOUBLE</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>num_elements</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1008" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a211cc0343048afd3d3683067e485c429" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_DOUBLE_IS_INF</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1009" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1abc0cf8a2855b1a6d31a384d1b8e46635" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_DOUBLE_IS_NEG_INF</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1010" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1010" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a452669170770fd9706b50d4f8a5a9d9b" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_DOUBLE_IS_NAN</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1011" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1011" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a4e173194eb8a61a2b6ae56387b9a711e" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_DOUBLE_IS_DETERMINATE</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1012" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a325486baed73eea2a22ffc22a0d9287b" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_INF</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1013" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1013" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a9ec775d80ad483f428d4cced55702b23" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1014" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a3b4d263b82fa9f15fe0fe8bff9d9cd4f" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NAN</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1015" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity__internals_8h_1a6716b473882b5806d98c361fafb21e6b" prot="public" static="no">
        <name>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE</name>
        <param><defname>actual</defname></param>
        <param><defname>line</defname></param>
        <param><defname>message</defname></param>
        <initializer>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), UnityStrErrDouble)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="1016" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="1016" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4" prot="public" static="no" strong="no">
        <type></type>
        <name>UNITY_DISPLAY_STYLE_T</name>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4a0d959189a9371a015ec340973fc5318c" prot="public">
          <name>UNITY_DISPLAY_STYLE_INT</name>
          <initializer>= (UNITY_INT_WIDTH / 8) + UNITY_DISPLAY_RANGE_INT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4a78060e131071395f2d2aac77f261ed5f" prot="public">
          <name>UNITY_DISPLAY_STYLE_INT8</name>
          <initializer>= 1 + UNITY_DISPLAY_RANGE_INT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4a88997e6a5dcd964bbc80399d67bafba9" prot="public">
          <name>UNITY_DISPLAY_STYLE_INT16</name>
          <initializer>= 2 + UNITY_DISPLAY_RANGE_INT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4adcfc2f4862b6351503247cd71670b7e0" prot="public">
          <name>UNITY_DISPLAY_STYLE_INT32</name>
          <initializer>= 4 + UNITY_DISPLAY_RANGE_INT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4a7901b0c93cfa82ce8c7203132d4183ae" prot="public">
          <name>UNITY_DISPLAY_STYLE_UINT</name>
          <initializer>= (UNITY_INT_WIDTH / 8) + UNITY_DISPLAY_RANGE_UINT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4a6ea09dbdaa4fe235b7422c850a4b14f8" prot="public">
          <name>UNITY_DISPLAY_STYLE_UINT8</name>
          <initializer>= 1 + UNITY_DISPLAY_RANGE_UINT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4ab2772ac78a9385b34827680629f30a57" prot="public">
          <name>UNITY_DISPLAY_STYLE_UINT16</name>
          <initializer>= 2 + UNITY_DISPLAY_RANGE_UINT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4a6658cd9d7d136ee81a34600b7385567e" prot="public">
          <name>UNITY_DISPLAY_STYLE_UINT32</name>
          <initializer>= 4 + UNITY_DISPLAY_RANGE_UINT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4af3eb9042cc384cbcba5847d20449c8fa" prot="public">
          <name>UNITY_DISPLAY_STYLE_HEX8</name>
          <initializer>= 1 + UNITY_DISPLAY_RANGE_HEX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4ad34011b6a340663cf55a595f87490462" prot="public">
          <name>UNITY_DISPLAY_STYLE_HEX16</name>
          <initializer>= 2 + UNITY_DISPLAY_RANGE_HEX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4a3d229459b9309f9c527f3f1cb5ac1915" prot="public">
          <name>UNITY_DISPLAY_STYLE_HEX32</name>
          <initializer>= 4 + UNITY_DISPLAY_RANGE_HEX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4a21695b9f50194fbf29cd884cd0251415" prot="public">
          <name>UNITY_DISPLAY_STYLE_CHAR</name>
          <initializer>= 1 + UNITY_DISPLAY_RANGE_CHAR + UNITY_DISPLAY_RANGE_INT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4a8623f549d1b8e9da499f091eae8f86da" prot="public">
          <name>UNITY_DISPLAY_STYLE_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="392" column="1" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="393" bodyend="420"/>
      </memberdef>
      <memberdef kind="enum" id="unity__internals_8h_1af032691a9e32795aa06770185ac14a48" prot="public" static="no" strong="no">
        <type></type>
        <name>UNITY_COMPARISON_T</name>
        <enumvalue id="unity__internals_8h_1af032691a9e32795aa06770185ac14a48a0a57ba0fa6f137564bc9bd0ed62e7a13" prot="public">
          <name>UNITY_WITHIN</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1af032691a9e32795aa06770185ac14a48ae634f01c386e7cf5adb87fdff10d0ef7" prot="public">
          <name>UNITY_EQUAL_TO</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1af032691a9e32795aa06770185ac14a48aef9811b045f1d85315961563cf96df72" prot="public">
          <name>UNITY_GREATER_THAN</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1af032691a9e32795aa06770185ac14a48a82357ac32941b499cd88dc59943c1be8" prot="public">
          <name>UNITY_GREATER_OR_EQUAL</name>
          <initializer>= 0x2 + UNITY_EQUAL_TO</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1af032691a9e32795aa06770185ac14a48a38d5a94ed78601d130841c0796bcdd27" prot="public">
          <name>UNITY_SMALLER_THAN</name>
          <initializer>= 0x4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1af032691a9e32795aa06770185ac14a48adfcf45e9141f5968e61444231cf58742" prot="public">
          <name>UNITY_SMALLER_OR_EQUAL</name>
          <initializer>= 0x4 + UNITY_EQUAL_TO</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1af032691a9e32795aa06770185ac14a48ae69fe71beb8325047f7bb9ea6291b148" prot="public">
          <name>UNITY_NOT_EQUAL</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1af032691a9e32795aa06770185ac14a48aa480ff43cbaadccf1df6b09926b50d8d" prot="public">
          <name>UNITY_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="422" column="1" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="423" bodyend="432"/>
      </memberdef>
      <memberdef kind="enum" id="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572" prot="public" static="no" strong="no">
        <type></type>
        <name>UNITY_FLOAT_TRAIT</name>
        <enumvalue id="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a55d10c41853433a52e4bcf114370cc3c" prot="public">
          <name>UNITY_FLOAT_IS_NOT_INF</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a9ceb93a4a5ce94726a153ca20877c447" prot="public">
          <name>UNITY_FLOAT_IS_INF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a1b9d774ad2582220a5986239a39b0c79" prot="public">
          <name>UNITY_FLOAT_IS_NOT_NEG_INF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a4ae18ad2eb5577fbbb61396e7de329cc" prot="public">
          <name>UNITY_FLOAT_IS_NEG_INF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a6cd53722882f0d01dea4da8d2c148898" prot="public">
          <name>UNITY_FLOAT_IS_NOT_NAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a43b25527bc46de77748a152b4be49057" prot="public">
          <name>UNITY_FLOAT_IS_NAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a87c2784971818301fc117b2ec02e339e" prot="public">
          <name>UNITY_FLOAT_IS_NOT_DET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a9df079c54906458c9d1d99d2ac26275a" prot="public">
          <name>UNITY_FLOAT_IS_DET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a6e57f534ca4e720c16a30a19dbf530b2" prot="public">
          <name>UNITY_FLOAT_INVALID_TRAIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="435" column="1" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="436" bodyend="446"/>
      </memberdef>
      <memberdef kind="enum" id="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817c" prot="public" static="no" strong="no">
        <type></type>
        <name>UNITY_FLAGS_T</name>
        <enumvalue id="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca577dd656fdb92684b33920d5986d6f12" prot="public">
          <name>UNITY_ARRAY_TO_VAL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca6e1eb5eefbb4a2bfed70942a3dc274eb" prot="public">
          <name>UNITY_ARRAY_TO_ARRAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca15a7d1868025012dc9f717205f9a3b3f" prot="public">
          <name>UNITY_ARRAY_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="449" column="1" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="450" bodyend="454"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="unity__internals_8h_1ae9c38948acf740d92635783d49f7437c" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char UNITY_UINT8</definition>
        <argsstring></argsstring>
        <name>UNITY_UINT8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="108" column="29" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unity__internals_8h_1a30824453263d2c64a42ab58bdf226882" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short UNITY_UINT16</definition>
        <argsstring></argsstring>
        <name>UNITY_UINT16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="109" column="29" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int UNITY_UINT32</definition>
        <argsstring></argsstring>
        <name>UNITY_UINT32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="110" column="29" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unity__internals_8h_1ad0279e5d512a86af7ff1cfda67b9f64e" prot="public" static="no">
        <type>signed char</type>
        <definition>typedef signed char UNITY_INT8</definition>
        <argsstring></argsstring>
        <name>UNITY_INT8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="111" column="29" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unity__internals_8h_1af18ca161e8d679a2d3b75928112c1707" prot="public" static="no">
        <type>signed short</type>
        <definition>typedef signed short UNITY_INT16</definition>
        <argsstring></argsstring>
        <name>UNITY_INT16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="112" column="29" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unity__internals_8h_1a05b69a453107cea541ee62916ff349f9" prot="public" static="no">
        <type>signed int</type>
        <definition>typedef signed int UNITY_INT32</definition>
        <argsstring></argsstring>
        <name>UNITY_INT32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="113" column="29" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" prot="public" static="no">
        <type>UNITY_UINT32</type>
        <definition>typedef UNITY_UINT32 UNITY_UINT</definition>
        <argsstring></argsstring>
        <name>UNITY_UINT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="139" column="26" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" prot="public" static="no">
        <type>UNITY_INT32</type>
        <definition>typedef UNITY_INT32 UNITY_INT</definition>
        <argsstring></argsstring>
        <name>UNITY_INT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="140" column="26" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unity__internals_8h_1ac4a36d11e8a7b250f2413ebb22e3092c" prot="public" static="no">
        <type>UNITY_FLOAT_TYPE</type>
        <definition>typedef UNITY_FLOAT_TYPE UNITY_FLOAT</definition>
        <argsstring></argsstring>
        <name>UNITY_FLOAT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="206" column="26" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unity__internals_8h_1ac3bdb18f38e23a4343af34a7f4e0d4a0" prot="public" static="no">
        <type>UNITY_FLOAT</type>
        <definition>typedef UNITY_FLOAT UNITY_DOUBLE</definition>
        <argsstring></argsstring>
        <name>UNITY_DOUBLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="240" column="23" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unity__internals_8h_1a750c0436a18789b916e55d70aae12985" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* UnityTestFunction) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>UnityTestFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="385" column="9" bodyfile="3_Implementation/unity/unity_internals.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unity__internals_8h_1a1b89a0178ea753186faf9f3dc271e2ba" prot="public" static="no">
        <type>enum UNITY_FLOAT_TRAIT</type>
        <definition>typedef enum UNITY_FLOAT_TRAIT UNITY_FLOAT_TRAIT_T</definition>
        <argsstring></argsstring>
        <name>UNITY_FLOAT_TRAIT_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="446" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_u_n_i_t_y___s_t_o_r_a_g_e___t" kindref="compound">UNITY_STORAGE_T</ref></type>
        <definition>struct UNITY_STORAGE_T Unity</definition>
        <argsstring></argsstring>
        <name>Unity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="385" column="9" bodyfile="3_Implementation/unity/unity.c" bodystart="26" bodyend="-1" declfile="3_Implementation/unity/unity_internals.h" declline="385" declcolumn="9"/>
      </memberdef>
      <memberdef kind="variable" id="unity__internals_8h_1aa0d91c84fde1e6562ec77dd393b5c07c" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrOk[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrOk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="680" column="19" bodyfile="3_Implementation/unity/unity.c" bodystart="34" bodyend="-1" declfile="3_Implementation/unity/unity_internals.h" declline="680" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="unity__internals_8h_1ad2cf819d80c1fe3a9649baf4ccdcbced" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrPass[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="681" column="19" bodyfile="3_Implementation/unity/unity.c" bodystart="35" bodyend="-1" declfile="3_Implementation/unity/unity_internals.h" declline="681" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="unity__internals_8h_1ad8448fdd418724662e7d4ccf03d96b08" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrFail[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrFail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="682" column="19" bodyfile="3_Implementation/unity/unity.c" bodystart="36" bodyend="-1" declfile="3_Implementation/unity/unity_internals.h" declline="682" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="unity__internals_8h_1afee1e18090d3dba33ca2573759911a03" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrIgnore[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrIgnore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="683" column="19" bodyfile="3_Implementation/unity/unity.c" bodystart="37" bodyend="-1" declfile="3_Implementation/unity/unity_internals.h" declline="683" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="unity__internals_8h_1ab644636442c612d56dfadc6970d2af67" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrErrFloat[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrErrFloat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="685" column="19" bodyfile="3_Implementation/unity/unity.c" bodystart="63" bodyend="-1" declfile="3_Implementation/unity/unity_internals.h" declline="685" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="unity__internals_8h_1ac8d03220554dfa13081f6a057ced349e" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrErrDouble[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrErrDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="686" column="19" bodyfile="3_Implementation/unity/unity.c" bodystart="64" bodyend="-1" declfile="3_Implementation/unity/unity_internals.h" declline="686" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="unity__internals_8h_1af5c213ecde93420aed908a92a5b32c66" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrErr64[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrErr64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="687" column="19" bodyfile="3_Implementation/unity/unity.c" bodystart="65" bodyend="-1" declfile="3_Implementation/unity/unity_internals.h" declline="687" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="unity__internals_8h_1a1e2d7034b98b9532ec094f55b909e99b" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrErrShorthand[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrErrShorthand</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="688" column="19" bodyfile="3_Implementation/unity/unity.c" bodystart="62" bodyend="-1" declfile="3_Implementation/unity/unity_internals.h" declline="688" declcolumn="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="unity__internals_8h_1aed50601fbdaea8fc0fef0c61cf877809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityBegin</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>UnityBegin</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="485" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1856" bodyend="1869" declfile="3_Implementation/unity/unity_internals.h" declline="485" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UnityEnd</definition>
        <argsstring>(void)</argsstring>
        <name>UnityEnd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="486" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1872" bodyend="1899" declfile="3_Implementation/unity/unity_internals.h" declline="486" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1afefd1b90b9854b428fef009e12489282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnitySetTestFile</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>UnitySetTestFile</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="487" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1850" bodyend="1853" declfile="3_Implementation/unity/unity_internals.h" declline="487" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a44f03f0124e59f6996da61946cc2a58e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityConcludeTest</definition>
        <argsstring>(void)</argsstring>
        <name>UnityConcludeTest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="488" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="540" bodyend="561" declfile="3_Implementation/unity/unity_internals.h" declline="488" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1ae3c8272eef0f0b6228ca47b9dd1aa2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityDefaultTestRun</definition>
        <argsstring>(UnityTestFunction Func, const char *FuncName, const int FuncLineNum)</argsstring>
        <name>UnityDefaultTestRun</name>
        <param>
          <type>UnityTestFunction</type>
          <declname>Func</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>FuncName</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>FuncLineNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="491" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1828" bodyend="1846" declfile="3_Implementation/unity/unity_internals.h" declline="491" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrint</definition>
        <argsstring>(const char *string)</argsstring>
        <name>UnityPrint</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="526" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="129" bodyend="149" declfile="3_Implementation/unity/unity_internals.h" declline="526" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a780817a15f2437360bd593c8fa7a1481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintLen</definition>
        <argsstring>(const char *string, const UNITY_UINT32 length)</argsstring>
        <name>UnityPrintLen</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="532" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="151" bodyend="186" declfile="3_Implementation/unity/unity_internals.h" declline="532" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a207d5b3e2bfe8042b0505066ccd07c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintMask</definition>
        <argsstring>(const UNITY_UINT mask, const UNITY_UINT number)</argsstring>
        <name>UnityPrintMask</name>
        <param>
          <type>const UNITY_UINT</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const UNITY_UINT</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="533" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="300" bodyend="324" declfile="3_Implementation/unity/unity_internals.h" declline="533" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a83c7c7072b2f0e3cce93e56960da46e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumberByStyle</definition>
        <argsstring>(const UNITY_INT number, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityPrintNumberByStyle</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="534" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="189" bodyend="237" declfile="3_Implementation/unity/unity_internals.h" declline="534" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a644211a214ab000dcabd5582c52e0313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumber</definition>
        <argsstring>(const UNITY_INT number_to_print)</argsstring>
        <name>UnityPrintNumber</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>number_to_print</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="535" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="240" bodyend="251" declfile="3_Implementation/unity/unity_internals.h" declline="535" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumberUnsigned</definition>
        <argsstring>(const UNITY_UINT number)</argsstring>
        <name>UnityPrintNumberUnsigned</name>
        <param>
          <type>const UNITY_UINT</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="536" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="255" bodyend="271" declfile="3_Implementation/unity/unity_internals.h" declline="536" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1ab5636c2c3e2d5ff0d89461e2323aa469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumberHex</definition>
        <argsstring>(const UNITY_UINT number, const char nibbles_to_print)</argsstring>
        <name>UnityPrintNumberHex</name>
        <param>
          <type>const UNITY_UINT</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>nibbles_to_print</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="537" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="274" bodyend="297" declfile="3_Implementation/unity/unity_internals.h" declline="537" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1ac3d39bc0740a28949a2ba689588491c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintFloat</definition>
        <argsstring>(const UNITY_DOUBLE input_number)</argsstring>
        <name>UnityPrintFloat</name>
        <param>
          <type>const UNITY_DOUBLE</type>
          <declname>input_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="540" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="335" bodyend="485" declfile="3_Implementation/unity/unity_internals.h" declline="540" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a3f437686c9739ec3ed42d9fb640b4d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualNumber</definition>
        <argsstring>(const UNITY_INT expected, const UNITY_INT actual, const char *msg, const UNITY_LINE_TYPE lineNumber, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityAssertEqualNumber</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="551" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="706" bodyend="724" declfile="3_Implementation/unity/unity_internals.h" declline="551" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a8a4659ab2a526ca3c93b7faf22bbf4b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertGreaterOrLessOrEqualNumber</definition>
        <argsstring>(const UNITY_INT threshold, const UNITY_INT actual, const UNITY_COMPARISON_T compare, const char *msg, const UNITY_LINE_TYPE lineNumber, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityAssertGreaterOrLessOrEqualNumber</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_COMPARISON_T</type>
          <declname>compare</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="557" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="727" bodyend="764" declfile="3_Implementation/unity/unity_internals.h" declline="557" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a5d36ae0ba6becafccda94364caf61adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualIntArray</definition>
        <argsstring>(UNITY_INTERNAL_PTR expected, UNITY_INTERNAL_PTR actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_LINE_TYPE lineNumber, const UNITY_DISPLAY_STYLE_T style, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualIntArray</name>
        <param>
          <type>UNITY_INTERNAL_PTR</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>UNITY_INTERNAL_PTR</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const UNITY_FLAGS_T</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="564" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="774" bodyend="865" declfile="3_Implementation/unity/unity_internals.h" declline="564" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a8d96fe471e0c327cbf5fd4682ee24d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertBits</definition>
        <argsstring>(const UNITY_INT mask, const UNITY_INT expected, const UNITY_INT actual, const char *msg, const UNITY_LINE_TYPE lineNumber)</argsstring>
        <name>UnityAssertBits</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="572" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="685" bodyend="703" declfile="3_Implementation/unity/unity_internals.h" declline="572" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1aea8fd35ccdacbbac33ca4395c6b9562b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualString</definition>
        <argsstring>(const char *expected, const char *actual, const char *msg, const UNITY_LINE_TYPE lineNumber)</argsstring>
        <name>UnityAssertEqualString</name>
        <param>
          <type>const char *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="578" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1346" bodyend="1382" declfile="3_Implementation/unity/unity_internals.h" declline="578" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1aafaf01a6294c0dc2fbe6fd0baab58f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualStringLen</definition>
        <argsstring>(const char *expected, const char *actual, const UNITY_UINT32 length, const char *msg, const UNITY_LINE_TYPE lineNumber)</argsstring>
        <name>UnityAssertEqualStringLen</name>
        <param>
          <type>const char *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="583" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1385" bodyend="1422" declfile="3_Implementation/unity/unity_internals.h" declline="583" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a38bca7a2b1d2b1d89f9e93e34e99df1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualStringArray</definition>
        <argsstring>(UNITY_INTERNAL_PTR expected, const char **actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_LINE_TYPE lineNumber, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualStringArray</name>
        <param>
          <type>UNITY_INTERNAL_PTR</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_FLAGS_T</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="589" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1425" bodyend="1501" declfile="3_Implementation/unity/unity_internals.h" declline="589" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a18b674bf204871eb5ab27f86405983f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualMemory</definition>
        <argsstring>(UNITY_INTERNAL_PTR expected, UNITY_INTERNAL_PTR actual, const UNITY_UINT32 length, const UNITY_UINT32 num_elements, const char *msg, const UNITY_LINE_TYPE lineNumber, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualMemory</name>
        <param>
          <type>UNITY_INTERNAL_PTR</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>UNITY_INTERNAL_PTR</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_FLAGS_T</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="596" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1504" bodyend="1565" declfile="3_Implementation/unity/unity_internals.h" declline="596" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a1edf5167aa7021aba92c523328e8fa61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertNumbersWithin</definition>
        <argsstring>(const UNITY_UINT delta, const UNITY_INT expected, const UNITY_INT actual, const char *msg, const UNITY_LINE_TYPE lineNumber, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityAssertNumbersWithin</name>
        <param>
          <type>const UNITY_UINT</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const UNITY_INT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="604" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1179" bodyend="1223" declfile="3_Implementation/unity/unity_internals.h" declline="604" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a7125230f609e287bbe574be8ea46d1e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertNumbersArrayWithin</definition>
        <argsstring>(const UNITY_UINT delta, UNITY_INTERNAL_PTR expected, UNITY_INTERNAL_PTR actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_LINE_TYPE lineNumber, const UNITY_DISPLAY_STYLE_T style, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertNumbersArrayWithin</name>
        <param>
          <type>const UNITY_UINT</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>UNITY_INTERNAL_PTR</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>UNITY_INTERNAL_PTR</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_DISPLAY_STYLE_T</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const UNITY_FLAGS_T</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="611" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1226" bodyend="1343" declfile="3_Implementation/unity/unity_internals.h" declline="611" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a19426fb71356bf89131ad7c7825318b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityFail</definition>
        <argsstring>(const char *message, const UNITY_LINE_TYPE line) UNITY_FUNCTION_ATTR(noreturn)</argsstring>
        <name>UnityFail</name>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="620" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1759" bodyend="1793" declfile="3_Implementation/unity/unity_internals.h" declline="620" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a2f0bb376e166d9cc96c04038de6d1bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityIgnore</definition>
        <argsstring>(const char *message, const UNITY_LINE_TYPE line) UNITY_FUNCTION_ATTR(noreturn)</argsstring>
        <name>UnityIgnore</name>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="621" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1796" bodyend="1809" declfile="3_Implementation/unity/unity_internals.h" declline="621" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1aab07c6775c63f8976893ab8cd8e5d14c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityMessage</definition>
        <argsstring>(const char *message, const UNITY_LINE_TYPE line)</argsstring>
        <name>UnityMessage</name>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="622" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="1812" bodyend="1823" declfile="3_Implementation/unity/unity_internals.h" declline="622" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1adc1934cb22540eed0b2b86e1f6aeb697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertFloatsWithin</definition>
        <argsstring>(const UNITY_FLOAT delta, const UNITY_FLOAT expected, const UNITY_FLOAT actual, const char *msg, const UNITY_LINE_TYPE lineNumber)</argsstring>
        <name>UnityAssertFloatsWithin</name>
        <param>
          <type>const UNITY_FLOAT</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>const UNITY_FLOAT</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const UNITY_FLOAT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="625" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="952" bodyend="968" declfile="3_Implementation/unity/unity_internals.h" declline="625" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1ac8b9306c24d6dcc3ffb129d29014f819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualFloatArray</definition>
        <argsstring>(UNITY_PTR_ATTRIBUTE const UNITY_FLOAT *expected, UNITY_PTR_ATTRIBUTE const UNITY_FLOAT *actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_LINE_TYPE lineNumber, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualFloatArray</name>
        <param>
          <type>UNITY_PTR_ATTRIBUTE const UNITY_FLOAT *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>UNITY_PTR_ATTRIBUTE const UNITY_FLOAT *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const UNITY_UINT32</type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_FLAGS_T</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="631" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="904" bodyend="949" declfile="3_Implementation/unity/unity_internals.h" declline="631" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1aa7909741e6f90c6af19e07b91c88ad4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertFloatSpecial</definition>
        <argsstring>(const UNITY_FLOAT actual, const char *msg, const UNITY_LINE_TYPE lineNumber, const UNITY_FLOAT_TRAIT_T style)</argsstring>
        <name>UnityAssertFloatSpecial</name>
        <param>
          <type>const UNITY_FLOAT</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const UNITY_LINE_TYPE</type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const UNITY_FLOAT_TRAIT_T</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="638" column="6" bodyfile="3_Implementation/unity/unity.c" bodystart="971" bodyend="1033" declfile="3_Implementation/unity/unity_internals.h" declline="638" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1aed32d6a240e25d9493f6492882f7d3d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UNITY_INTERNAL_PTR</type>
        <definition>UNITY_INTERNAL_PTR UnityNumToPtr</definition>
        <argsstring>(const UNITY_INT num, const UNITY_UINT8 size)</argsstring>
        <name>UnityNumToPtr</name>
        <param>
          <type>const UNITY_INT</type>
          <declname>num</declname>
        </param>
        <param>
          <type>const UNITY_UINT8</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="668" column="20" bodyfile="3_Implementation/unity/unity.c" bodystart="1585" bodyend="1607" declfile="3_Implementation/unity/unity_internals.h" declline="668" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="unity__internals_8h_1a01b1539781210d836d875fa9c6957982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UNITY_INTERNAL_PTR</type>
        <definition>UNITY_INTERNAL_PTR UnityFloatToPtr</definition>
        <argsstring>(const float num)</argsstring>
        <name>UnityFloatToPtr</name>
        <param>
          <type>const float</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="3_Implementation/unity/unity_internals.h" line="670" column="20" bodyfile="3_Implementation/unity/unity.c" bodystart="1611" bodyend="1615" declfile="3_Implementation/unity/unity_internals.h" declline="670" declcolumn="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>==========================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>Unity<sp/>Project<sp/>-<sp/>A<sp/>Test<sp/>Framework<sp/>for<sp/>C</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-19<sp/>Mike<sp/>Karlesky,<sp/>Mark<sp/>VanderVoord,<sp/>Greg<sp/>Williams</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>[Released<sp/>under<sp/>MIT<sp/>License.<sp/>Please<sp/>refer<sp/>to<sp/>license.txt<sp/>for<sp/>details]</highlight></codeline>
<codeline lineno="5"><highlight class="comment">==========================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_INTERNALS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_INTERNALS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_INCLUDE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;unity_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_SETJMP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;setjmp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_MATH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_STDDEF_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_INCLUDE_PRINT_FORMATTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Unity<sp/>Attempts<sp/>to<sp/>Auto-Detect<sp/>Integer<sp/>Types</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Attempt<sp/>1:<sp/>UINT_MAX,<sp/>ULONG_MAX<sp/>in<sp/>&lt;limits.h&gt;,<sp/>or<sp/>default<sp/>to<sp/>32<sp/>bits</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Attempt<sp/>2:<sp/>UINTPTR_MAX<sp/>in<sp/>&lt;stdint.h&gt;,<sp/>or<sp/>default<sp/>to<sp/>same<sp/>size<sp/>as<sp/>long</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>The<sp/>user<sp/>may<sp/>override<sp/>any<sp/>of<sp/>these<sp/>derived<sp/>constants:</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>UNITY_INT_WIDTH,<sp/>UNITY_LONG_WIDTH,<sp/>UNITY_POINTER_WIDTH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_STDINT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_LIMITS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>UNITY_FUNCTION_ATTR(a)<sp/>__attribute__((a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>UNITY_FUNCTION_ATTR(a)<sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>Guess<sp/>Widths<sp/>If<sp/>Not<sp/>Specified</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Determine<sp/>the<sp/>size<sp/>of<sp/>an<sp/>int,<sp/>if<sp/>not<sp/>already<sp/>specified.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>We<sp/>cannot<sp/>use<sp/>sizeof(int),<sp/>because<sp/>it<sp/>is<sp/>not<sp/>yet<sp/>defined</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>at<sp/>this<sp/>stage<sp/>in<sp/>the<sp/>translation<sp/>of<sp/>the<sp/>C<sp/>program.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Also<sp/>sizeof(int)<sp/>does<sp/>return<sp/>the<sp/>size<sp/>in<sp/>addressable<sp/>units<sp/>on<sp/>all<sp/>platforms,</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>which<sp/>may<sp/>not<sp/>necessarily<sp/>be<sp/>the<sp/>size<sp/>in<sp/>bytes.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>Therefore,<sp/>infer<sp/>it<sp/>from<sp/>UINT_MAX<sp/>if<sp/>possible.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_INT_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>UINT_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(UINT_MAX<sp/>==<sp/>0xFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_INT_WIDTH<sp/>(16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>(UINT_MAX<sp/>==<sp/>0xFFFFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_INT_WIDTH<sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>(UINT_MAX<sp/>==<sp/>0xFFFFFFFFFFFFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_INT_WIDTH<sp/>(64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>to<sp/>default<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UNITY_INT_WIDTH<sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>UINT_MAX<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Determine<sp/>the<sp/>size<sp/>of<sp/>a<sp/>long,<sp/>if<sp/>not<sp/>already<sp/>specified.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_LONG_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>ULONG_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(ULONG_MAX<sp/>==<sp/>0xFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_LONG_WIDTH<sp/>(16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>(ULONG_MAX<sp/>==<sp/>0xFFFFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_LONG_WIDTH<sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>(ULONG_MAX<sp/>==<sp/>0xFFFFFFFFFFFFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_LONG_WIDTH<sp/>(64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>to<sp/>default<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UNITY_LONG_WIDTH<sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>ULONG_MAX<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Determine<sp/>the<sp/>size<sp/>of<sp/>a<sp/>pointer,<sp/>if<sp/>not<sp/>already<sp/>specified.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_POINTER_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>UINTPTR_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(UINTPTR_MAX<sp/>&lt;=<sp/>0xFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_POINTER_WIDTH<sp/>(16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>(UINTPTR_MAX<sp/>&lt;=<sp/>0xFFFFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_POINTER_WIDTH<sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>(UINTPTR_MAX<sp/>&lt;=<sp/>0xFFFFFFFFFFFFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_POINTER_WIDTH<sp/>(64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>to<sp/>default<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UNITY_POINTER_WIDTH<sp/>UNITY_LONG_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>UINTPTR_MAX<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>Int<sp/>Support<sp/>(Define<sp/>types<sp/>based<sp/>on<sp/>detected<sp/>sizes)</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(UNITY_INT_WIDTH<sp/>==<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>UNITY_UINT8;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>UNITY_UINT16;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT32;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>UNITY_INT8;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT16;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INT32;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(UNITY_INT_WIDTH<sp/>==<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>UNITY_UINT8;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UINT16;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>UNITY_UINT32;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>UNITY_INT8;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INT16;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>UNITY_INT32;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Invalid<sp/>UNITY_INT_WIDTH<sp/>specified!<sp/>(16<sp/>or<sp/>32<sp/>are<sp/>supported)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>64-bit<sp/>Support</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Auto-detect<sp/>64<sp/>Bit<sp/>Support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>UNITY_LONG_WIDTH<sp/>==<sp/>64<sp/>||<sp/>UNITY_POINTER_WIDTH<sp/>==<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>64-Bit<sp/>Support<sp/>Dependent<sp/>Configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>64-bit<sp/>Support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>UNITY_UINT;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UNITY_INT32<sp/><sp/>UNITY_INT;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UNITY_MAX_NIBBLES<sp/>(8)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Maximum<sp/>number<sp/>of<sp/>nibbles<sp/>in<sp/>a<sp/>UNITY_(U)INT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>64-bit<sp/>Support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(UNITY_LONG_WIDTH<sp/>==<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>UNITY_UINT64;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>UNITY_INT64;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>(UNITY_LONG_WIDTH<sp/>==<sp/>64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_UINT64;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INT64;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Invalid<sp/>UNITY_LONG_WIDTH<sp/>specified!<sp/>(32<sp/>or<sp/>64<sp/>are<sp/>supported)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UNITY_UINT64<sp/>UNITY_UINT;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UNITY_INT64<sp/><sp/>UNITY_INT;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UNITY_MAX_NIBBLES<sp/>(16)<sp/></highlight><highlight class="comment">/*<sp/>Maximum<sp/>number<sp/>of<sp/>nibbles<sp/>in<sp/>a<sp/>UNITY_(U)INT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>Pointer<sp/>Support</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(UNITY_POINTER_WIDTH<sp/>==<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_PTR_TO_INT<sp/>UNITY_INT32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_DISPLAY_STYLE_POINTER<sp/>UNITY_DISPLAY_STYLE_HEX32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(UNITY_POINTER_WIDTH<sp/>==<sp/>64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_PTR_TO_INT<sp/>UNITY_INT64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_DISPLAY_STYLE_POINTER<sp/>UNITY_DISPLAY_STYLE_HEX64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(UNITY_POINTER_WIDTH<sp/>==<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_PTR_TO_INT<sp/>UNITY_INT16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_DISPLAY_STYLE_POINTER<sp/>UNITY_DISPLAY_STYLE_HEX16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#error<sp/>Invalid<sp/>UNITY_POINTER_WIDTH<sp/>specified!<sp/>(16,<sp/>32<sp/>or<sp/>64<sp/>are<sp/>supported)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_PTR_ATTRIBUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_PTR_ATTRIBUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_INTERNAL_PTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_INTERNAL_PTR<sp/>UNITY_PTR_ATTRIBUTE<sp/>const<sp/>void*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>Float<sp/>Support</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>Floating<sp/>Point<sp/>Support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_EXCLUDE_DOUBLE<sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>double<sp/>when<sp/>excluding<sp/>float<sp/>support<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Floating<sp/>Point<sp/>Support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_FLOAT_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_FLOAT_PRECISION<sp/>(0.00001f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_FLOAT_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_FLOAT_TYPE<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UNITY_FLOAT_TYPE<sp/>UNITY_FLOAT;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>isinf<sp/>&amp;<sp/>isnan<sp/>macros<sp/>should<sp/>be<sp/>provided<sp/>by<sp/>math.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>isinf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>value<sp/>of<sp/>Inf<sp/>-<sp/>Inf<sp/>is<sp/>NaN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>isinf(n)<sp/>(isnan((n)<sp/>-<sp/>(n))<sp/>&amp;&amp;<sp/>!isnan(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>isnan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NaN<sp/>is<sp/>the<sp/>only<sp/>floating<sp/>point<sp/>value<sp/>that<sp/>does<sp/>NOT<sp/>equal<sp/>itself.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>Therefore<sp/>if<sp/>n<sp/>!=<sp/>n,<sp/>then<sp/>it<sp/>is<sp/>NaN.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>isnan(n)<sp/>((n<sp/>!=<sp/>n)<sp/>?<sp/>1<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>Double<sp/>Float<sp/>Support</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>unlike<sp/>float,<sp/>we<sp/>DON&apos;T<sp/>include<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(UNITY_EXCLUDE_DOUBLE)<sp/>||<sp/>!defined(UNITY_INCLUDE_DOUBLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>Floating<sp/>Point<sp/>Support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>UNITY_INCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>UNITY_DOUBLE_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UNITY_DOUBLE_TYPE<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UNITY_FLOAT<sp/>UNITY_DOUBLE;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>parameter<sp/>in<sp/>UnityPrintFloat(UNITY_DOUBLE),<sp/>which<sp/>aliases<sp/>to<sp/>double<sp/>or<sp/>float<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Double<sp/>Floating<sp/>Point<sp/>Support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>UNITY_DOUBLE_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_DOUBLE_PRECISION<sp/>(1e-12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>UNITY_DOUBLE_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_DOUBLE_TYPE<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UNITY_DOUBLE_TYPE<sp/>UNITY_DOUBLE;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>Output<sp/>Method:<sp/>stdout<sp/>(DEFAULT)</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_OUTPUT_CHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>to<sp/>using<sp/>putchar,<sp/>which<sp/>is<sp/>defined<sp/>in<sp/>stdio.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_OUTPUT_CHAR(a)<sp/>(void)putchar(a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>defined<sp/>as<sp/>something<sp/>else,<sp/>make<sp/>sure<sp/>we<sp/>declare<sp/>it<sp/>here<sp/>so<sp/>it&apos;s<sp/>ready<sp/>for<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>UNITY_OUTPUT_CHAR_HEADER_DECLARATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UNITY_OUTPUT_CHAR_HEADER_DECLARATION;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_OUTPUT_FLUSH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>UNITY_USE_FLUSH_STDOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>want<sp/>to<sp/>use<sp/>the<sp/>stdout<sp/>flush<sp/>utility<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UNITY_OUTPUT_FLUSH()<sp/>(void)fflush(stdout)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;ve<sp/>specified<sp/>nothing,<sp/>therefore<sp/>flush<sp/>should<sp/>just<sp/>be<sp/>ignored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UNITY_OUTPUT_FLUSH()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>defined<sp/>as<sp/>something<sp/>else,<sp/>make<sp/>sure<sp/>we<sp/>declare<sp/>it<sp/>here<sp/>so<sp/>it&apos;s<sp/>ready<sp/>for<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>UNITY_OUTPUT_FLUSH_HEADER_DECLARATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UNITY_OUTPUT_FLUSH_HEADER_DECLARATION;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_OUTPUT_FLUSH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_FLUSH_CALL()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_FLUSH_CALL()<sp/>UNITY_OUTPUT_FLUSH()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_PRINT_EOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_PRINT_EOL()<sp/><sp/><sp/><sp/>UNITY_OUTPUT_CHAR(&apos;\n&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_OUTPUT_START</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_OUTPUT_START()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_OUTPUT_COMPLETE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_OUTPUT_COMPLETE()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_INCLUDE_EXEC_TIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>!defined(UNITY_EXEC_TIME_START)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(UNITY_EXEC_TIME_STOP)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(UNITY_PRINT_EXEC_TIME)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>!defined(UNITY_TIME_TYPE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>none<sp/>any<sp/>of<sp/>these<sp/>macros<sp/>are<sp/>defined<sp/>then<sp/>try<sp/>to<sp/>provide<sp/>a<sp/>default<sp/>implementation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(UNITY_CLOCK_MS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>simple<sp/>way<sp/>to<sp/>get<sp/>a<sp/>default<sp/>implementation<sp/>on<sp/>platforms<sp/>that<sp/>support<sp/>getting<sp/>a<sp/>millisecond<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_TIME_TYPE<sp/>UNITY_UINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_EXEC_TIME_START()<sp/>Unity.CurrentTestStartTime<sp/>=<sp/>UNITY_CLOCK_MS()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_EXEC_TIME_STOP()<sp/>Unity.CurrentTestStopTime<sp/>=<sp/>UNITY_CLOCK_MS()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_PRINT_EXEC_TIME()<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_UINT<sp/>execTimeMs<sp/>=<sp/>(Unity.CurrentTestStopTime<sp/>-<sp/>Unity.CurrentTestStartTime);<sp/>\</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityPrint(&quot;<sp/>(&quot;</highlight><highlight class="normal">);<sp/>\</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityPrintNumberUnsigned(execTimeMs);<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityPrint(&quot;<sp/>ms)&quot;);<sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_TIME_TYPE<sp/>clock_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_GET_TIME(t)<sp/>t<sp/>=<sp/>(clock_t)((clock()<sp/>*<sp/>1000)<sp/>/<sp/>CLOCKS_PER_SEC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_EXEC_TIME_START()<sp/>UNITY_GET_TIME(Unity.CurrentTestStartTime)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_EXEC_TIME_STOP()<sp/>UNITY_GET_TIME(Unity.CurrentTestStopTime)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_PRINT_EXEC_TIME()<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_UINT<sp/>execTimeMs<sp/>=<sp/>(Unity.CurrentTestStopTime<sp/>-<sp/>Unity.CurrentTestStartTime);<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityPrint(&quot;<sp/>(&quot;</highlight><highlight class="normal">);<sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityPrintNumberUnsigned(execTimeMs);<sp/>\</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityPrint(&quot;<sp/>ms)&quot;);<sp/>\</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>defined(__unix__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_TIME_TYPE<sp/>struct<sp/>timespec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_GET_TIME(t)<sp/>clock_gettime(CLOCK_MONOTONIC,<sp/>&amp;t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_EXEC_TIME_START()<sp/>UNITY_GET_TIME(Unity.CurrentTestStartTime)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_EXEC_TIME_STOP()<sp/>UNITY_GET_TIME(Unity.CurrentTestStopTime)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>UNITY_PRINT_EXEC_TIME()<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_UINT<sp/>execTimeMs<sp/>=<sp/>((Unity.CurrentTestStopTime.tv_sec<sp/>-<sp/>Unity.CurrentTestStartTime.tv_sec)<sp/>*<sp/>1000L);<sp/>\</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execTimeMs<sp/>+=<sp/>((Unity.CurrentTestStopTime.tv_nsec<sp/>-<sp/>Unity.CurrentTestStartTime.tv_nsec)<sp/>/<sp/>1000000L);<sp/>\</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityPrint(&quot;<sp/>(&quot;</highlight><highlight class="normal">);<sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityPrintNumberUnsigned(execTimeMs);<sp/>\</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityPrint(&quot;<sp/>ms)&quot;);<sp/>\</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXEC_TIME_START</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_EXEC_TIME_START()<sp/>do{}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXEC_TIME_STOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_EXEC_TIME_STOP()<sp/>do{}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_TIME_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TIME_TYPE<sp/>UNITY_UINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_PRINT_EXEC_TIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_PRINT_EXEC_TIME()<sp/>do{}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>Footprint</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_LINE_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_LINE_TYPE<sp/>UNITY_UINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_COUNTER_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_COUNTER_TYPE<sp/>UNITY_UINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>Internal<sp/>Structs<sp/>Needed</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*UnityTestFunction)(void);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_DISPLAY_RANGE_INT<sp/><sp/>(0x10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_DISPLAY_RANGE_UINT<sp/>(0x20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_DISPLAY_RANGE_HEX<sp/><sp/>(0x40)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_DISPLAY_RANGE_CHAR<sp/>(0x80)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_INT<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(UNITY_INT_WIDTH<sp/>/<sp/>8)<sp/>+<sp/>UNITY_DISPLAY_RANGE_INT,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_INT8<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>+<sp/>UNITY_DISPLAY_RANGE_INT,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_INT16<sp/><sp/><sp/><sp/>=<sp/>2<sp/>+<sp/>UNITY_DISPLAY_RANGE_INT,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_INT32<sp/><sp/><sp/><sp/>=<sp/>4<sp/>+<sp/>UNITY_DISPLAY_RANGE_INT,</highlight></codeline>
<codeline lineno="398"><highlight class="normal">#ifdef<sp/>UNITY_SUPPORT_64</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_INT64<sp/><sp/><sp/><sp/>=<sp/>8<sp/>+<sp/>UNITY_DISPLAY_RANGE_INT,</highlight></codeline>
<codeline lineno="400"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_UINT<sp/><sp/><sp/><sp/><sp/>=<sp/>(UNITY_INT_WIDTH<sp/>/<sp/>8)<sp/>+<sp/>UNITY_DISPLAY_RANGE_UINT,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_UINT8<sp/><sp/><sp/><sp/>=<sp/>1<sp/>+<sp/>UNITY_DISPLAY_RANGE_UINT,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_UINT16<sp/><sp/><sp/>=<sp/>2<sp/>+<sp/>UNITY_DISPLAY_RANGE_UINT,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_UINT32<sp/><sp/><sp/>=<sp/>4<sp/>+<sp/>UNITY_DISPLAY_RANGE_UINT,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_UINT64<sp/><sp/><sp/>=<sp/>8<sp/>+<sp/>UNITY_DISPLAY_RANGE_UINT,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_HEX8<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>+<sp/>UNITY_DISPLAY_RANGE_HEX,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_HEX16<sp/><sp/><sp/><sp/>=<sp/>2<sp/>+<sp/>UNITY_DISPLAY_RANGE_HEX,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_HEX32<sp/><sp/><sp/><sp/>=<sp/>4<sp/>+<sp/>UNITY_DISPLAY_RANGE_HEX,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_HEX64<sp/><sp/><sp/><sp/>=<sp/>8<sp/>+<sp/>UNITY_DISPLAY_RANGE_HEX,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_CHAR<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>+<sp/>UNITY_DISPLAY_RANGE_CHAR<sp/>+<sp/>UNITY_DISPLAY_RANGE_INT,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_DISPLAY_STYLE_UNKNOWN</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}<sp/>UNITY_DISPLAY_STYLE_T;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_WITHIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_EQUAL_TO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_GREATER_THAN<sp/><sp/><sp/><sp/><sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_GREATER_OR_EQUAL<sp/>=<sp/>0x2<sp/>+<sp/>UNITY_EQUAL_TO,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_SMALLER_THAN<sp/><sp/><sp/><sp/><sp/>=<sp/>0x4,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_SMALLER_OR_EQUAL<sp/>=<sp/>0x4<sp/>+<sp/>UNITY_EQUAL_TO,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_NOT_EQUAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_UNKNOWN</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}<sp/>UNITY_COMPARISON_T;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>UNITY_FLOAT_TRAIT</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLOAT_IS_NOT_INF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLOAT_IS_INF,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLOAT_IS_NOT_NEG_INF,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLOAT_IS_NEG_INF,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLOAT_IS_NOT_NAN,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLOAT_IS_NAN,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLOAT_IS_NOT_DET,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLOAT_IS_DET,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_FLOAT_INVALID_TRAIT</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}<sp/>UNITY_FLOAT_TRAIT_T;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_VAL<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_ARRAY,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_ARRAY_UNKNOWN</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}<sp/>UNITY_FLAGS_T;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="struct_u_n_i_t_y___s_t_o_r_a_g_e___t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_u_n_i_t_y___s_t_o_r_a_g_e___t" kindref="compound">UNITY_STORAGE_T</ref></highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>TestFile;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>CurrentTestName;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DETAILS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>CurrentDetail1;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>CurrentDetail2;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_LINE_TYPE<sp/>CurrentTestLineNumber;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_COUNTER_TYPE<sp/>NumberOfTests;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_COUNTER_TYPE<sp/>TestFailures;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_COUNTER_TYPE<sp/>TestIgnores;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_COUNTER_TYPE<sp/>CurrentTestFailed;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_COUNTER_TYPE<sp/>CurrentTestIgnored;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_INCLUDE_EXEC_TIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_TIME_TYPE<sp/>CurrentTestStartTime;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_TIME_TYPE<sp/>CurrentTestStopTime;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_SETJMP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>jmp_buf<sp/>AbortFrame;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal">};</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_u_n_i_t_y___s_t_o_r_a_g_e___t" kindref="compound">UNITY_STORAGE_T</ref><sp/>Unity;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/>Test<sp/>Suite<sp/>Management</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityBegin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>UnityEnd(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnitySetTestFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityConcludeTest(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RUN_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityDefaultTestRun(UnityTestFunction<sp/>Func,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>FuncName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FuncLineNum);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_SKIP_DEFAULT_RUNNER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/>Details<sp/>Support</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_EXCLUDE_DETAILS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_CLR_DETAILS()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_SET_DETAIL(d1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_SET_DETAILS(d1,d2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_CLR_DETAILS()<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>Unity.CurrentDetail1<sp/>=<sp/>0;<sp/><sp/><sp/>Unity.CurrentDetail2<sp/>=<sp/>0;<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_SET_DETAIL(d1)<sp/><sp/><sp/><sp/><sp/>{<sp/>Unity.CurrentDetail1<sp/>=<sp/>(d1);<sp/><sp/>Unity.CurrentDetail2<sp/>=<sp/>0;<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_SET_DETAILS(d1,d2)<sp/>{<sp/>Unity.CurrentDetail1<sp/>=<sp/>(d1);<sp/><sp/>Unity.CurrentDetail2<sp/>=<sp/>(d2);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_DETAIL1_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_DETAIL1_NAME<sp/>&quot;Function&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_DETAIL2_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_DETAIL2_NAME<sp/>&quot;Argument&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_PRINT_TEST_CONTEXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UNITY_PRINT_TEST_CONTEXT(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*<sp/>Test<sp/>Output</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityPrint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_INCLUDE_PRINT_FORMATTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityPrintF(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>...);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityPrintLen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>length);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityPrintMask(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>number);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityPrintNumberByStyle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityPrintNumber(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>number_to_print);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityPrintNumberUnsigned(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>number);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityPrintNumberHex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nibbles_to_print);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityPrintFloat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE<sp/>input_number);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*<sp/>Test<sp/>Assertion<sp/>Functions</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*-------------------------------------------------------</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>the<sp/>macros<sp/>below<sp/>this<sp/>section<sp/>instead<sp/>of<sp/>calling</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*<sp/><sp/>these<sp/>directly.<sp/>The<sp/>macros<sp/>have<sp/>a<sp/>consistent<sp/>naming</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*<sp/><sp/>convention<sp/>and<sp/>will<sp/>pull<sp/>in<sp/>file<sp/>and<sp/>line<sp/>information</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>you.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertEqualNumber(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>expected,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>actual,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertGreaterOrLessOrEqualNumber(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>threshold,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>actual,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_COMPARISON_T<sp/>compare,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertEqualIntArray(UNITY_INTERNAL_PTR<sp/>expected,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INTERNAL_PTR<sp/>actual,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertBits(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>mask,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>expected,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>actual,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertEqualString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>actual,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertEqualStringLen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>actual,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>length,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertEqualStringArray(<sp/>UNITY_INTERNAL_PTR<sp/>expected,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>actual,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertEqualMemory(<sp/>UNITY_INTERNAL_PTR<sp/>expected,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INTERNAL_PTR<sp/>actual,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>length,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertNumbersWithin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>delta,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>expected,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>actual,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertNumbersArrayWithin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT<sp/>delta,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INTERNAL_PTR<sp/>expected,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_INTERNAL_PTR<sp/>actual,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DISPLAY_STYLE_T<sp/>style,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityFail(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>line)<sp/>UNITY_FUNCTION_ATTR(noreturn);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityIgnore(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>line)<sp/>UNITY_FUNCTION_ATTR(noreturn);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>line);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertFloatsWithin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT<sp/>delta,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT<sp/>expected,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT<sp/>actual,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertEqualFloatArray(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT*<sp/>expected,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT*<sp/>actual,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertFloatSpecial(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT<sp/>actual,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT_TRAIT_T<sp/>style);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertDoublesWithin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE<sp/>delta,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE<sp/>expected,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE<sp/>actual,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertEqualDoubleArray(UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE*<sp/>expected,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_PTR_ATTRIBUTE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE*<sp/>actual,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT32<sp/>num_elements,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLAGS_T<sp/>flags);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnityAssertDoubleSpecial(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_DOUBLE<sp/>actual,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_LINE_TYPE<sp/>lineNumber,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_FLOAT_TRAIT_T<sp/>style);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/>*<sp/>Helpers</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal">UNITY_INTERNAL_PTR<sp/>UnityNumToPtr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT<sp/>num,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_UINT8<sp/>size);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal">UNITY_INTERNAL_PTR<sp/>UnityFloatToPtr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">UNITY_INTERNAL_PTR<sp/>UnityDoubleToPtr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/>*<sp/>Error<sp/>Strings<sp/>We<sp/>Might<sp/>Need</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>UnityStrOk[];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>UnityStrPass[];</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>UnityStrFail[];</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>UnityStrIgnore[];</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>UnityStrErrFloat[];</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>UnityStrErrDouble[];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>UnityStrErr64[];</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>UnityStrErrShorthand[];</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/>*<sp/>Test<sp/>Running<sp/>Macros</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_SETJMP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_PROTECT()<sp/>(setjmp(Unity.AbortFrame)<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_ABORT()<sp/>longjmp(Unity.AbortFrame,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_PROTECT()<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_ABORT()<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>tricky<sp/>series<sp/>of<sp/>macros<sp/>gives<sp/>us<sp/>an<sp/>optional<sp/>line<sp/>argument<sp/>to<sp/>treat<sp/>it<sp/>as<sp/>RUN_TEST(func,<sp/>num=__LINE__)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RUN_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__STDC_VERSION__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_SUPPORT_VARIADIC_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_SUPPORT_VARIADIC_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_TEST(...)<sp/>RUN_TEST_AT_LINE(__VA_ARGS__,<sp/>__LINE__,<sp/>throwaway)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_TEST_AT_LINE(func,<sp/>line,<sp/>...)<sp/>UnityDefaultTestRun(func,<sp/>#func,<sp/>line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>can&apos;t<sp/>do<sp/>the<sp/>tricky<sp/>version,<sp/>we&apos;ll<sp/>just<sp/>have<sp/>to<sp/>require<sp/>them<sp/>to<sp/>always<sp/>include<sp/>the<sp/>line<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RUN_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CMOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_TEST(func,<sp/>num)<sp/>UnityDefaultTestRun(func,<sp/>#func,<sp/>num)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RUN_TEST(func)<sp/>UnityDefaultTestRun(func,<sp/>#func,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_LINE_NUM<sp/>(Unity.CurrentTestLineNumber)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_IS_IGNORED<sp/>(Unity.CurrentTestIgnored)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_NEW_TEST(a)<sp/>\</highlight></codeline>
<codeline lineno="727"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Unity.CurrentTestName<sp/>=<sp/>(a);<sp/>\</highlight></codeline>
<codeline lineno="728"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Unity.CurrentTestLineNumber<sp/>=<sp/>(UNITY_LINE_TYPE)(__LINE__);<sp/>\</highlight></codeline>
<codeline lineno="729"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Unity.NumberOfTests++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_BEGIN()<sp/>UnityBegin(__FILE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_END()<sp/>UnityEnd()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_SHORTHAND_AS_INT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_SHORTHAND_AS_MEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_SHORTHAND_AS_NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_SHORTHAND_AS_RAW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_SHORTHAND_AS_OLD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/>*<sp/>Command<sp/>Line<sp/>Argument<sp/>Support</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_USE_COMMAND_LINE_ARGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnityParseOptions(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnityTestMatches(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/>*<sp/>Basic<sp/>Fail<sp/>and<sp/>Ignore</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_FAIL(line,<sp/>message)<sp/><sp/><sp/>UnityFail(<sp/><sp/><sp/>(message),<sp/>(UNITY_LINE_TYPE)(line))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_IGNORE(line,<sp/>message)<sp/>UnityIgnore(<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/>*<sp/>Test<sp/>Asserts</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/>*-------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT(condition,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{if<sp/>(condition)<sp/>{}<sp/>else<sp/>{UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>(message));}}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NULL(pointer,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_ASSERT(((pointer)<sp/>==<sp/>NULL),<sp/><sp/>(UNITY_LINE_TYPE)(line),<sp/>(message))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_NULL(pointer,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_ASSERT(((pointer)<sp/>!=<sp/>NULL),<sp/><sp/>(UNITY_LINE_TYPE)(line),<sp/>(message))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EMPTY(pointer,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_ASSERT(((pointer[0])<sp/>==<sp/>0),<sp/><sp/>(UNITY_LINE_TYPE)(line),<sp/>(message))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EMPTY(pointer,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_ASSERT(((pointer[0])<sp/>!=<sp/>0),<sp/><sp/>(UNITY_LINE_TYPE)(line),<sp/>(message))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(expected),<sp/>(UNITY_INT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT8(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)(expected),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT16(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT16)(expected),<sp/>(UNITY_INT)(UNITY_INT16)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT32(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT32)(expected),<sp/>(UNITY_INT)(UNITY_INT32)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(expected),<sp/>(UNITY_INT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT8(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(UNITY_UINT8<sp/>)(expected),<sp/>(UNITY_INT)(UNITY_UINT8<sp/>)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT16(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(UNITY_UINT16)(expected),<sp/>(UNITY_INT)(UNITY_UINT16)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT32(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(UNITY_UINT32)(expected),<sp/>(UNITY_INT)(UNITY_UINT32)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_HEX8(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)(expected),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_HEX16(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT16)(expected),<sp/>(UNITY_INT)(UNITY_INT16)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_HEX32(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT32)(expected),<sp/>(UNITY_INT)(UNITY_INT32)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_CHAR(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)(expected),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_CHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_BITS(mask,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertBits((UNITY_INT)(mask),<sp/>(UNITY_INT)(expected),<sp/>(UNITY_INT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_INT(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INT)(actual),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_INT8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)(threshold),<sp/><sp/>(UNITY_INT)(UNITY_INT8<sp/>)(actual),<sp/><sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_INT16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold),<sp/><sp/>(UNITY_INT)(UNITY_INT16)(actual),<sp/><sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_INT32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold),<sp/><sp/>(UNITY_INT)(UNITY_INT32)(actual),<sp/><sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_UINT(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INT)(actual),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_UINT8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_UINT8<sp/>)(actual),<sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_UINT16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),<sp/>(UNITY_INT)(UNITY_UINT16)(actual),<sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_UINT32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),<sp/>(UNITY_INT)(UNITY_UINT32)(actual),<sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_HEX8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_UINT8<sp/>)(actual),<sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_HEX16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),<sp/>(UNITY_INT)(UNITY_UINT16)(actual),<sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_HEX32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),<sp/>(UNITY_INT)(UNITY_UINT32)(actual),<sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_CHAR(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)(threshold),<sp/><sp/>(UNITY_INT)(UNITY_INT8<sp/>)(actual),<sp/><sp/>UNITY_NOT_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_CHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_INT(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INT)(actual),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_INT8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)(actual),<sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_INT16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold),<sp/>(UNITY_INT)(UNITY_INT16)(actual),<sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_INT32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold),<sp/>(UNITY_INT)(UNITY_INT32)(actual),<sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_UINT(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INT)(actual),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_UINT8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_UINT8<sp/>)(actual),<sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_UINT16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),<sp/>(UNITY_INT)(UNITY_UINT16)(actual),<sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_UINT32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),<sp/>(UNITY_INT)(UNITY_UINT32)(actual),<sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_HEX8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_UINT8<sp/>)(actual),<sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_HEX16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),<sp/>(UNITY_INT)(UNITY_UINT16)(actual),<sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_HEX32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),<sp/>(UNITY_INT)(UNITY_UINT32)(actual),<sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_CHAR(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)(actual),<sp/>UNITY_GREATER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_CHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_INT(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INT)(actual),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_INT8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)(actual),<sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_INT16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold),<sp/>(UNITY_INT)(UNITY_INT16)(actual),<sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_INT32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold),<sp/>(UNITY_INT)(UNITY_INT32)(actual),<sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_UINT(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INT)(actual),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_UINT8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_UINT8<sp/>)(actual),<sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_UINT16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),<sp/>(UNITY_INT)(UNITY_UINT16)(actual),<sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_UINT32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),<sp/>(UNITY_INT)(UNITY_UINT32)(actual),<sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_HEX8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_UINT8<sp/>)(actual),<sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_HEX16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),<sp/>(UNITY_INT)(UNITY_UINT16)(actual),<sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_HEX32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),<sp/>(UNITY_INT)(UNITY_UINT32)(actual),<sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_CHAR(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)(actual),<sp/>UNITY_SMALLER_THAN,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_CHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(threshold),<sp/>(UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)<sp/>(threshold),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)<sp/>(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)<sp/>(threshold),<sp/>(UNITY_INT)(UNITY_INT16)<sp/>(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)<sp/>(threshold),<sp/>(UNITY_INT)(UNITY_INT32)<sp/>(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(threshold),<sp/>(UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_UINT8<sp/>)(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),<sp/>(UNITY_INT)(UNITY_UINT16)(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),<sp/>(UNITY_INT)(UNITY_UINT32)(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_UINT8<sp/>)(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),<sp/>(UNITY_INT)(UNITY_UINT16)(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),<sp/>(UNITY_INT)(UNITY_UINT32)(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_CHAR(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)<sp/>(threshold),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)<sp/>(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_CHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(threshold),<sp/><sp/>(UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)(threshold),<sp/><sp/>(UNITY_INT)(UNITY_INT8<sp/>)<sp/>(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT16)(threshold),<sp/><sp/>(UNITY_INT)(UNITY_INT16)<sp/>(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT32)(threshold),<sp/><sp/>(UNITY_INT)(UNITY_INT32)<sp/>(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(threshold),<sp/><sp/>(UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_UINT8<sp/>)(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),<sp/>(UNITY_INT)(UNITY_UINT16)(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),<sp/>(UNITY_INT)(UNITY_UINT32)(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX8(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT8<sp/>)(threshold),<sp/>(UNITY_INT)(UNITY_UINT8<sp/>)(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX16(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT16)(threshold),<sp/>(UNITY_INT)(UNITY_UINT16)(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX32(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_UINT32)(threshold),<sp/>(UNITY_INT)(UNITY_UINT32)(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_CHAR(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(UNITY_INT8<sp/>)(threshold),<sp/><sp/>(UNITY_INT)(UNITY_INT8<sp/>)<sp/>(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_CHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(delta),<sp/>(UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(expected),<sp/>(UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT8_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((UNITY_UINT8<sp/>)(delta),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(expected),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT16_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((UNITY_UINT16)(delta),<sp/>(UNITY_INT)(UNITY_INT16)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(expected),<sp/>(UNITY_INT)(UNITY_INT16)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT32_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((UNITY_UINT32)(delta),<sp/>(UNITY_INT)(UNITY_INT32)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(expected),<sp/>(UNITY_INT)(UNITY_INT32)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(delta),<sp/>(UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(expected),<sp/>(UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT8_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((UNITY_UINT8<sp/>)(delta),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT8<sp/>)(expected),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT8<sp/>)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT16_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((UNITY_UINT16)(delta),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(expected),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT32_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((UNITY_UINT32)(delta),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(expected),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_HEX8_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((UNITY_UINT8<sp/>)(delta),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT8<sp/>)(expected),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT8<sp/>)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_HEX16_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((UNITY_UINT16)(delta),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(expected),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT16)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_HEX32_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((UNITY_UINT32)(delta),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(expected),<sp/>(UNITY_INT)(UNITY_UINT)(UNITY_UINT32)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_CHAR_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((UNITY_UINT8<sp/>)(delta),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(expected),<sp/>(UNITY_INT)(UNITY_INT8<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_CHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersArrayWithin(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT8_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT8<sp/>)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT8,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT16_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT16)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT16,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT32_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT32)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT32,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/>UnityAssertNumbersArrayWithin(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT8_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/>UnityAssertNumbersArrayWithin(<sp/>(UNITY_UINT16)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT8,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT16_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT16)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT16,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT32_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT32)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT32,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_HEX8_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT8<sp/>)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX8,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_HEX16_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT16)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX16,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_HEX32_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT32)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX32,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_CHAR_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT8<sp/>)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>((UNITY_UINT32)(num_elements)),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_CHAR,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_PTR(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_PTR_TO_INT)(expected),<sp/>(UNITY_PTR_TO_INT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_POINTER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_STRING(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualString((const<sp/>char*)(expected),<sp/>(const<sp/>char*)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_STRING_LEN(expected,<sp/>actual,<sp/>len,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualStringLen((const<sp/>char*)(expected),<sp/>(const<sp/>char*)(actual),<sp/>(UNITY_UINT32)(len),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_MEMORY(expected,<sp/>actual,<sp/>len,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualMemory((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(len),<sp/>1,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT,<sp/><sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT8_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT8,<sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT16_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT16,<sp/><sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT32_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT32,<sp/><sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT,<sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT8_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT8,<sp/><sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT16_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT16,<sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT32_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT32,<sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_HEX8_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX8,<sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_HEX16_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX16,<sp/><sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_HEX32_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX32,<sp/><sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_PTR_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_POINTER,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_STRING_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualStringArray((UNITY_INTERNAL_PTR)(expected),<sp/>(const<sp/>char**)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_MEMORY_ARRAY(expected,<sp/>actual,<sp/>len,<sp/>num_elements,<sp/>line,<sp/>message)<sp/>UnityAssertEqualMemory((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(len),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_CHAR_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_CHAR,<sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_INT(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(expected),<sp/>(UNITY_INT_WIDTH<sp/>/<sp/>8)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT,<sp/><sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_INT8(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT8<sp/><sp/>)(expected),<sp/>1),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT8,<sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_INT16(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT16<sp/>)(expected),<sp/>2),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT16,<sp/><sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_INT32(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT32<sp/>)(expected),<sp/>4),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT32,<sp/><sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_UINT(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(expected),<sp/>(UNITY_INT_WIDTH<sp/>/<sp/>8)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT,<sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_UINT8(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_UINT8<sp/>)(expected),<sp/>1),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT8,<sp/><sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_UINT16(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_UINT16)(expected),<sp/>2),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT16,<sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_UINT32(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_UINT32)(expected),<sp/>4),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT32,<sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_HEX8(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT8<sp/><sp/>)(expected),<sp/>1),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX8,<sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_HEX16(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT16<sp/>)(expected),<sp/>2),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX16,<sp/><sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_HEX32(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT32<sp/>)(expected),<sp/>4),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX32,<sp/><sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_PTR(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_PTR_TO_INT)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(expected),<sp/>(UNITY_POINTER_WIDTH<sp/>/<sp/>8)),<sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_POINTER,<sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_STRING(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualStringArray((UNITY_INTERNAL_PTR)(expected),<sp/>(const<sp/>char**)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_MEMORY(expected,<sp/>actual,<sp/>len,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/>UnityAssertEqualMemory((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(len),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_CHAR(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT8<sp/><sp/>)(expected),<sp/>1),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_CHAR,<sp/><sp/><sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT64(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(expected),<sp/>(UNITY_INT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT64(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(expected),<sp/>(UNITY_INT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_HEX64(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualNumber((UNITY_INT)(expected),<sp/>(UNITY_INT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT64_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT64,<sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT64_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT64,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_HEX64_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray((UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX64,<sp/><sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_INT64(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT64)(expected),<sp/>8),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT64,<sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_UINT64(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_UINT64)(expected),<sp/>8),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT64,<sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_HEX64(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualIntArray(UnityNumToPtr((UNITY_INT)(UNITY_INT64)(expected),<sp/>8),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX64,<sp/><sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT64_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((delta),<sp/>(UNITY_INT)(expected),<sp/>(UNITY_INT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT64_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((delta),<sp/>(UNITY_INT)(expected),<sp/>(UNITY_INT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_HEX64_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertNumbersWithin((delta),<sp/>(UNITY_INT)(expected),<sp/>(UNITY_INT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_INT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_NOT_EQUAL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_UINT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_NOT_EQUAL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_NOT_EQUAL_HEX64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_NOT_EQUAL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_INT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_GREATER_THAN,<sp/><sp/><sp/><sp/><sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_UINT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_GREATER_THAN,<sp/><sp/><sp/><sp/><sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_HEX64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_GREATER_THAN,<sp/><sp/><sp/><sp/><sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_GREATER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_INT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_SMALLER_THAN,<sp/><sp/><sp/><sp/><sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_UINT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_SMALLER_THAN,<sp/><sp/><sp/><sp/><sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_HEX64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_SMALLER_THAN,<sp/><sp/><sp/><sp/><sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertGreaterOrLessOrEqualNumber((UNITY_INT)(threshold),<sp/>(UNITY_INT)(actual),<sp/>UNITY_SMALLER_OR_EQUAL,<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT64_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT64)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_INT64,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT64_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT64)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_UINT64,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_HEX64_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/>UnityAssertNumbersArrayWithin((UNITY_UINT64)(delta),<sp/>(UNITY_INTERNAL_PTR)(expected),<sp/>(UNITY_INTERNAL_PTR)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_DISPLAY_STYLE_HEX64,<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT64(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT64(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_HEX64(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_INT64_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_UINT64_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_HEX64_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT64_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT64_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_HEX64_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_INT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_UINT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_THAN_HEX64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_INT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_UINT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_GREATER_OR_EQUAL_HEX64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_INT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_UINT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_THAN_HEX64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_INT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_UINT64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_SMALLER_OR_EQUAL_HEX64(threshold,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_INT64_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_UINT64_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_HEX64_ARRAY_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErr64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_FLOAT(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_FLOAT_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_FLOAT(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NEG_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NAN(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_DETERMINATE(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NOT_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NOT_NEG_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NOT_NAN(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrFloat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertFloatsWithin((UNITY_FLOAT)(delta),<sp/>(UNITY_FLOAT)(expected),<sp/>(UNITY_FLOAT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_FLOAT(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_ASSERT_FLOAT_WITHIN((UNITY_FLOAT)(expected)<sp/>*<sp/>(UNITY_FLOAT)UNITY_FLOAT_PRECISION,<sp/>(UNITY_FLOAT)(expected),<sp/>(UNITY_FLOAT)(actual),<sp/>(UNITY_LINE_TYPE)(line),<sp/>(message))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_FLOAT_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualFloatArray((UNITY_FLOAT*)(expected),<sp/>(UNITY_FLOAT*)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_FLOAT(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualFloatArray(UnityFloatToPtr(expected),<sp/>(UNITY_FLOAT*)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertFloatSpecial((UNITY_FLOAT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_INF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NEG_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertFloatSpecial((UNITY_FLOAT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NEG_INF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NAN(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertFloatSpecial((UNITY_FLOAT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_DETERMINATE(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertFloatSpecial((UNITY_FLOAT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_DET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NOT_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertFloatSpecial((UNITY_FLOAT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NOT_INF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NOT_NEG_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertFloatSpecial((UNITY_FLOAT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NOT_NEG_INF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NOT_NAN(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertFloatSpecial((UNITY_FLOAT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NOT_NAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_FLOAT_IS_NOT_DETERMINATE(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertFloatSpecial((UNITY_FLOAT)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NOT_DET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_DOUBLE(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_DOUBLE_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_DOUBLE(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NEG_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NAN(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_DETERMINATE(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NAN(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line),<sp/>UnityStrErrDouble)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertDoublesWithin((UNITY_DOUBLE)(delta),<sp/>(UNITY_DOUBLE)(expected),<sp/>(UNITY_DOUBLE)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_DOUBLE(expected,<sp/>actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNITY_TEST_ASSERT_DOUBLE_WITHIN((UNITY_DOUBLE)(expected)<sp/>*<sp/>(UNITY_DOUBLE)UNITY_DOUBLE_PRECISION,<sp/>(UNITY_DOUBLE)(expected),<sp/>(UNITY_DOUBLE)(actual),<sp/>(UNITY_LINE_TYPE)(line),<sp/>(message))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EQUAL_DOUBLE_ARRAY(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualDoubleArray((UNITY_DOUBLE*)(expected),<sp/>(UNITY_DOUBLE*)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_ARRAY_TO_ARRAY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_EACH_EQUAL_DOUBLE(expected,<sp/>actual,<sp/>num_elements,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertEqualDoubleArray(UnityDoubleToPtr(expected),<sp/>(UNITY_DOUBLE*)(actual),<sp/>(UNITY_UINT32)(num_elements),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_ARRAY_TO_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_INF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NEG_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NEG_INF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NAN(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_DETERMINATE(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_DET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NOT_INF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NEG_INF(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NOT_NEG_INF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_NAN(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NOT_NAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_TEST_ASSERT_DOUBLE_IS_NOT_DETERMINATE(actual,<sp/>line,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityAssertDoubleSpecial((UNITY_DOUBLE)(actual),<sp/>(message),<sp/>(UNITY_LINE_TYPE)(line),<sp/>UNITY_FLOAT_IS_NOT_DET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>UNITY_INTERNALS_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="3_Implementation/unity/unity_internals.h"/>
  </compounddef>
</doxygen>
